#pragma warning disable

// Copyright 2008, Microsoft Corporation
// Sample Code - Use restricted to terms of use defined in the accompanying license agreement (EULA.doc)

//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 2.0.0.0
// Schema file: hafasXMLInterface.xsd
// Creation Date: 18.11.2014 11:57:37
//--------------------------------------------------------------

using System;
using System.Xml.Serialization;
using System.Collections;
using System.Collections.Generic;
using System.Xml.Schema;
using System.ComponentModel;

namespace Hafas
{
    using System.Runtime.Serialization;

    public struct Declarations
	{
		public const string SchemaVersion = "";
	}

	[DataContract]
	public enum getOut
	{
		[XmlEnum(Name="YES")] YES,
		[XmlEnum(Name="NO")] NO
	}

    [DataContract]
	public enum flag
	{
		[XmlEnum(Name="META")] META,
		[XmlEnum(Name="FINAL")] FINAL,
		[XmlEnum(Name="MIXED")] MIXED
	}

	[DataContract]
	public enum sleeper
	{
		[XmlEnum(Name="0")] _0,
		[XmlEnum(Name="1")] _1
	}

	[DataContract]
	public enum type2345
	{
		[XmlEnum(Name="OEV")] OEV,
		[XmlEnum(Name="IV")] IV
	}

	[DataContract]
	public enum type2345678
	{
		[XmlEnum(Name="NORMAL")] NORMAL,
		[XmlEnum(Name="VIRTUAL")] @VIRTUAL
	}

	[DataContract]
	public enum lang23
	{
		[XmlEnum(Name="DE")] DE,
		[XmlEnum(Name="DK")] DK,
		[XmlEnum(Name="EN")] EN,
		[XmlEnum(Name="FR")] FR,
		[XmlEnum(Name="PL")] PL,
		[XmlEnum(Name="IT")] IT,
		[XmlEnum(Name="MACRO")] MACRO
	}

	[DataContract]
	public enum getIn
	{
		[XmlEnum(Name="YES")] YES,
		[XmlEnum(Name="NO")] NO
	}

	[DataContract]
	public enum type23456
	{
		[XmlEnum(Name="NORMAL")] NORMAL,
		[XmlEnum(Name="DIRECTION")] DIRECTION,
		[XmlEnum(Name="CATEGORY")] CATEGORY,
		[XmlEnum(Name="INTERNALCATEGORY")] INTERNALCATEGORY,
		[XmlEnum(Name="OPERATOR")] @OPERATOR,
        [XmlEnum(Name = "INFO")]
        INFO,
        [XmlEnum(Name = "ADMINISTRATION")] ADMINISTRATION,
		[XmlEnum(Name="NAME")] NAME,
		[XmlEnum(Name="NAMEFORMATTED")] NAMEFORMATTED,
		[XmlEnum(Name="NUMBER")] NUMBER,
		[XmlEnum(Name="LINE")] LINE,
		[XmlEnum(Name="EXT_ID")] EXT_ID
	}

	[DataContract]
	public enum dir
	{
		[XmlEnum(Name="O")] O,
		[XmlEnum(Name="R")] R
	}

	[DataContract]
	public enum scrDir
	{
		[XmlEnum(Name="B")] B,
		[XmlEnum(Name="F")] F,
		[XmlEnum(Name="I")] I
	}

	[DataContract]
	public enum b
	{
		[XmlEnum(Name="0")] _0,
		[XmlEnum(Name="1")] _1
	}

	[DataContract]
	public enum sMode
	{
		[XmlEnum(Name="N")] N,
		[XmlEnum(Name="P")] P
	}

	[DataContract]
	public enum type23
	{
		[XmlEnum(Name="INC")] INC,
		[XmlEnum(Name="EXC")] EXC
	}

	[DataContract]
	public enum f
	{
		[XmlEnum(Name="0")] _0,
		[XmlEnum(Name="1")] _1
	}

	[DataContract]
	public enum a2
	{
		[XmlEnum(Name="0")] _0,
		[XmlEnum(Name="1")] _1
	}

	[DataContract]
	public enum Capacity1st
	{
		[XmlEnum(Name="-1")] _Minus1,
		[XmlEnum(Name="0")] _0,
		[XmlEnum(Name="1")] _1,
		[XmlEnum(Name="2")] _2,
		[XmlEnum(Name="3")] _3
	}

	[DataContract]
	public enum value
	{
		[XmlEnum(Name="NORMAL")] NORMAL,
		[XmlEnum(Name="WARNING")] WARNING,
		[XmlEnum(Name="HAS_ALTERNATIVE")] HAS_ALTERNATIVE,
		[XmlEnum(Name="IS_ALTERNATIVE")] IS_ALTERNATIVE,
		[XmlEnum(Name="NO_RT_INFO")] NO_RT_INFO,
		[XmlEnum(Name="HAS_DELAYINFO")] HAS_DELAYINFO,
		[XmlEnum(Name="WARNING_TRANSFER")] WARNING_TRANSFER,
		[XmlEnum(Name="WARNING_CONNECTION_NOT_RIDABLE")] WARNING_CONNECTION_NOT_RIDABLE
	}

	[DataContract]
	public enum type2
	{
		[XmlEnum(Name="ST")] ST,
		[XmlEnum(Name="ADR")] ADR,
		[XmlEnum(Name="POI")] POI,
		[XmlEnum(Name="ALLTYPE")] ALLTYPE
	}

	[DataContract]
	public enum lang2
	{
		[XmlEnum(Name="DE")] DE,
		[XmlEnum(Name="EN")] EN,
		[XmlEnum(Name="FR")] FR,
		[XmlEnum(Name="DK")] DK,
		[XmlEnum(Name="IT")] IT,
		[XmlEnum(Name="PL")] PL
	}

	[DataContract]
	public enum lang
	{
		[XmlEnum(Name="DE")] DE,
		[XmlEnum(Name="EN")] EN,
		[XmlEnum(Name="FR")] FR,
		[XmlEnum(Name="DK")] DK,
		[XmlEnum(Name="IT")] IT,
		[XmlEnum(Name="PL")] PL
	}

	[DataContract]
	public enum couchette
	{
		[XmlEnum(Name="0")] _0,
		[XmlEnum(Name="1")] _1
	}

	[DataContract]
	public enum boardType
	{
		[XmlEnum(Name="ARR")] ARR,
		[XmlEnum(Name="DEP")] DEP
	}

	[DataContract]
	public enum a
	{
		[XmlEnum(Name="0")] _0,
		[XmlEnum(Name="1")] _1
	}

	[DataContract]
	public enum type23456789
	{
		[XmlEnum(Name="info")] info,
		[XmlEnum(Name="attr")] attr
	}

	[DataContract]
	public enum direct
	{
		[XmlEnum(Name="0")] _0,
		[XmlEnum(Name="1")] _1
	}

	[DataContract]
	public enum Capacity2nd
	{
		[XmlEnum(Name="-1")] _Minus1,
		[XmlEnum(Name="0")] _0,
		[XmlEnum(Name="1")] _1,
		[XmlEnum(Name="2")] _2,
		[XmlEnum(Name="3")] _3
	}

	[DataContract]
	public enum level
	{
		[XmlEnum(Name="M")] M,
		[XmlEnum(Name="W")] W,
		[XmlEnum(Name="E")] E,
		[XmlEnum(Name="F")] F
	}

	[DataContract]
	public enum type234
	{
		[XmlEnum(Name="FOOT")] FOOT,
		[XmlEnum(Name="BIKE")] BIKE,
		[XmlEnum(Name="TAXI")] TAXI,
		[XmlEnum(Name="PARKANDRIDE")] PARKANDRIDE,
		[XmlEnum(Name="CAR")] CAR
	}

	[DataContract]
	public enum type
	{
		[XmlEnum(Name="HAFAS_GEO")] HAFAS_GEO,
		[XmlEnum(Name="HAFAS_HANNOVER")] HAFAS_HANNOVER,
		[XmlEnum(Name="WGS84")] WGS84
	}

	[DataContract]
	public enum handicappedAccess
	{
		[XmlEnum(Name="0")] _0,
		[XmlEnum(Name="1")] _1,
		[XmlEnum(Name="2")] _2,
		[XmlEnum(Name="3")] _3,
		[XmlEnum(Name="4")] _4
	}

	[DataContract]
	public enum type234567
	{
		[XmlEnum(Name="SHORT")] @SHORT,
		[XmlEnum(Name="NORMAL")] NORMAL,
		[XmlEnum(Name="LONG")] @LONG
	}

	[DataContract]
	public enum sMode2
	{
		[XmlEnum(Name="N")] N,
		[XmlEnum(Name="P")] P
	}



	[XmlType(TypeName="ConBasicReq"),DataContract]
	public class ConBasicReq : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.Start),ElementName="Start",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Start __Start;
		
		[XmlIgnore]
		public Hafas.Start Start
		{
			get { if (__Start == null) __Start = new Hafas.Start(); return __Start; }
			set { __Start = value; }
		}

		[XmlElement(Type=typeof(Hafas.Dest),ElementName="Dest",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Dest __Dest;
		
		[XmlIgnore]
		public Hafas.Dest Dest
		{
			get { if (__Dest == null) __Dest = new Hafas.Dest(); return __Dest; }
			set { __Dest = value; }
		}

		[XmlElement(Type=typeof(Hafas.Via),ElementName="Via",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Via> __Via;
		
		[XmlIgnore]
		public List<Hafas.Via> Via
		{
			get { if (__Via == null) __Via = new List<Hafas.Via>(); return __Via; }
			set { __Via = value; }
		}

		public ConBasicReq()
		{
		}


        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="ViaType"),DataContract]
	public class ViaType : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="min")]
		public string __min;
		
		[XmlIgnore]
		public string min
		{ 
			get { return __min; }
			set { __min = value; RaisePropertyChanged("min"); }
		}

		[XmlElement(Type=typeof(Hafas.Station),ElementName="Station",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Station __Station;
		
		[XmlIgnore]
		public Hafas.Station Station
		{
			get { if (__Station == null) __Station = new Hafas.Station(); return __Station; }
			set { __Station = value; }
		}

		[XmlElement(Type=typeof(Hafas.Prod),ElementName="Prod",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Prod __Prod;
		
		[XmlIgnore]
		public Hafas.Prod Prod
		{
			get { if (__Prod == null) __Prod = new Hafas.Prod(); return __Prod; }
			set { __Prod = value; }
		}

		public ViaType()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="StartViaType"),DataContract]
	public class StartViaType : Hafas.RequestLocationType, INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.Prod),ElementName="Prod",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Prod __Prod;
		
		[XmlIgnore]
		public Hafas.Prod Prod
		{
			get { if (__Prod == null) __Prod = new Hafas.Prod(); return __Prod; }
			set { __Prod = value; }
		}

		public StartViaType() : base()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="RequestLocationType"),DataContract]
	public class RequestLocationType : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="min")]
		public string __min;
		
		[XmlIgnore]
		public string min
		{ 
			get { return __min; }
			set { __min = value; RaisePropertyChanged("min"); }
		}

		[XmlElement(Type=typeof(Hafas.Address),ElementName="Address",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Address __Address;
		
		[XmlIgnore]
		public Hafas.Address Address
		{
			get { if (__Address == null) __Address = new Hafas.Address(); return __Address; }
			set { __Address = value; }
		}

		[XmlElement(Type=typeof(Hafas.Poi),ElementName="Poi",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Poi __Poi;
		
		[XmlIgnore]
		public Hafas.Poi Poi
		{
			get { if (__Poi == null) __Poi = new Hafas.Poi(); return __Poi; }
			set { __Poi = value; }
		}

		[XmlElement(Type=typeof(Hafas.Station),ElementName="Station",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Station __Station;
		
		[XmlIgnore]
		public Hafas.Station Station
		{
			get { if (__Station == null) __Station = new Hafas.Station(); return __Station; }
			set { __Station = value; }
		}

		[XmlElement(Type=typeof(Hafas.Coord),ElementName="Coord",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Coord __Coord;
		
		[XmlIgnore]
		public Hafas.Coord Coord
		{
			get { if (__Coord == null) __Coord = new Hafas.Coord(); return __Coord; }
			set { __Coord = value; }
		}

		public RequestLocationType()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="ReqTType"),DataContract]
	public class ReqTType : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="time",DataType="token")]
		public string __time;
		
		[XmlIgnore]
		public string @time
		{ 
			get { return __time; }
			set { __time = value; RaisePropertyChanged("@time"); }
		}

		[XmlAttribute(AttributeName="date",DataType="token")]
		public string __date;
		
		[XmlIgnore]
		public string date
		{ 
			get { return __date; }
			set { __date = value; RaisePropertyChanged("date"); }
		}

		[XmlAttribute(AttributeName="a")]
		public a __a;
		
		[XmlIgnore]
		public bool __aSpecified;
		
		[XmlIgnore]
		public a a
		{ 
			get { return __a; }
			set { __a = value; __aSpecified = true; RaisePropertyChanged("a"); }
		}

		public ReqTType()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="TimeType"),DataContract]
	public class TimeType : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.@Time),ElementName="Time",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.@Time __Time;
		
		[XmlIgnore]
		public Hafas.@Time @Time
		{
			get { if (__Time == null) __Time = new Hafas.@Time(); return __Time; }
			set { __Time = value; }
		}

		public TimeType()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="LocationType"),DataContract]
	public class LocationType : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="name",DataType="string")]
		public string __name;
		
		[XmlIgnore]
		public string name
		{ 
			get { return __name; }
			set { __name = value; RaisePropertyChanged("name"); }
		}

		[XmlAttribute(AttributeName="x",DataType="integer")]
		public string __x;
		
		[XmlIgnore]
		public string x
		{ 
			get { return __x; }
			set { __x = value; RaisePropertyChanged("x"); }
		}

		[XmlAttribute(AttributeName="y",DataType="integer")]
		public string __y;
		
		[XmlIgnore]
		public string y
		{ 
			get { return __y; }
			set { __y = value; RaisePropertyChanged("y"); }
		}

		[XmlAttribute(AttributeName="z",DataType="integer")]
		public string __z;
		
		[XmlIgnore]
		public string z
		{ 
			get { return __z; }
			set { __z = value; RaisePropertyChanged("z"); }
		}

		[XmlAttribute(AttributeName="type")]
		public type __type;
		
		[XmlIgnore]
		public bool __typeSpecified;
		
		[XmlIgnore]
		public type type
		{ 
			get { return __type; }
			set { __type = value; __typeSpecified = true; RaisePropertyChanged("type"); }
		}

		public LocationType()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="StationType"),DataContract]
	public class StationType : Hafas.LocationType, INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="distance")]
		public string __distance;
		
		[XmlIgnore]
		public string distance
		{ 
			get { return __distance; }
			set { __distance = value; RaisePropertyChanged("distance"); }
		}

		[XmlAttribute(AttributeName="duration")]
		public string __duration;
		
		[XmlIgnore]
		public string duration
		{ 
			get { return __duration; }
			set { __duration = value; RaisePropertyChanged("duration"); }
		}

		[XmlAttribute(AttributeName="externalId")]
		public string __externalId;
		
		[XmlIgnore]
		public string externalId
		{ 
			get { return __externalId; }
			set { __externalId = value; RaisePropertyChanged("externalId"); }
		}

		[XmlAttribute(AttributeName="externalStationNr")]
		public string __externalStationNr;
		
		[XmlIgnore]
		public string externalStationNr
		{ 
			get { return __externalStationNr; }
			set { __externalStationNr = value; RaisePropertyChanged("externalStationNr"); }
		}

		public StationType() : base()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="ArrDepType"),DataContract]
	public class ArrDepType : Hafas.TimeType, INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="getOut")]
		public getOut __getOut;
		
		[XmlIgnore]
		public bool __getOutSpecified;
		
		[XmlIgnore]
		public getOut getOut
		{ 
			get { return __getOut; }
			set { __getOut = value; __getOutSpecified = true; RaisePropertyChanged("getOut"); }
		}

		[XmlAttribute(AttributeName="getIn")]
		public getIn __getIn;
		
		[XmlIgnore]
		public bool __getInSpecified;
		
		[XmlIgnore]
		public getIn getIn
		{ 
			get { return __getIn; }
			set { __getIn = value; __getInSpecified = true; RaisePropertyChanged("getIn"); }
		}

		[XmlAttribute(AttributeName="handicappedAccess")]
		public handicappedAccess __handicappedAccess;
		
		[XmlIgnore]
		public bool __handicappedAccessSpecified;
		
		[XmlIgnore]
		public handicappedAccess handicappedAccess
		{ 
			get { return __handicappedAccess; }
			set { __handicappedAccess = value; __handicappedAccessSpecified = true; RaisePropertyChanged("handicappedAccess"); }
		}

		[XmlAttribute(AttributeName="handicappedComment",DataType="string")]
		public string __handicappedComment;
		
		[XmlIgnore]
		public string handicappedComment
		{ 
			get { return __handicappedComment; }
			set { __handicappedComment = value; RaisePropertyChanged("handicappedComment"); }
		}

		[XmlElement(Type=typeof(Hafas.Platform),ElementName="Platform",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Platform __Platform;
		
		[XmlIgnore]
		public Hafas.Platform Platform
		{
			get { if (__Platform == null) __Platform = new Hafas.Platform(); return __Platform; }
			set { __Platform = value; }
		}

		public ArrDepType() : base()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="StopType"),DataContract]
	public class StopType : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.Station),ElementName="Station",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Station __Station;
		
		[XmlIgnore]
		public Hafas.Station Station
		{
			get { if (__Station == null) __Station = new Hafas.Station(); return __Station; }
			set { __Station = value; }
		}

		[XmlElement(ElementName="Date",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		public string __Date;
		
		[XmlIgnore]
		public string Date
		{ 
			get { return __Date; }
			set { __Date = value; RaisePropertyChanged("Date"); }
		}

		public StopType()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ReqC",IsNullable=false),DataContract]
	public class ReqC : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="ver",DataType="string")]
		public string __ver;
		
		[XmlIgnore]
		public string ver
		{ 
			get { return __ver; }
			set { __ver = value; RaisePropertyChanged("ver"); }
		}

		[XmlAttribute(AttributeName="prod",DataType="string")]
		public string __prod;
		
		[XmlIgnore]
		public string prod
		{ 
			get { return __prod; }
			set { __prod = value; RaisePropertyChanged("prod"); }
		}

		[XmlAttribute(AttributeName="lang")]
		public lang __lang;
		
		[XmlIgnore]
		public bool __langSpecified;
		
		[XmlIgnore]
		public lang lang
		{ 
			get { return __lang; }
			set { __lang = value; __langSpecified = true; RaisePropertyChanged("lang"); }
		}

		[XmlAttribute(AttributeName="accessId",DataType="string")]
		public string __accessId;
		
		[XmlIgnore]
		public string accessId
		{ 
			get { return __accessId; }
			set { __accessId = value; RaisePropertyChanged("accessId"); }
		}

		[XmlElement(Type=typeof(Hafas.STBReq),ElementName="STBReq",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.STBReq __STBReq;
		
		[XmlIgnore]
		public Hafas.STBReq STBReq
		{
			get { if (__STBReq == null) __STBReq = new Hafas.STBReq(); return __STBReq; }
			set { __STBReq = value; }
		}

		[XmlElement(Type=typeof(Hafas.LocValReq),ElementName="LocValReq",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.LocValReq> __LocValReq;
		
		[XmlIgnore]
		public List<Hafas.LocValReq> LocValReq
		{
			get { if (__LocValReq == null) __LocValReq = new List<Hafas.LocValReq>(); return __LocValReq; }
			set { __LocValReq = value; }
		}

		[XmlElement(Type=typeof(Hafas.ConReq),ElementName="ConReq",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ConReq __ConReq;
		
		[XmlIgnore]
		public Hafas.ConReq ConReq
		{
			get { if (__ConReq == null) __ConReq = new Hafas.ConReq(); return __ConReq; }
			set { __ConReq = value; }
		}

		[XmlElement(Type=typeof(Hafas.ConIntervalReq),ElementName="ConIntervalReq",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ConIntervalReq __ConIntervalReq;
		
		[XmlIgnore]
		public Hafas.ConIntervalReq ConIntervalReq
		{
			get { if (__ConIntervalReq == null) __ConIntervalReq = new Hafas.ConIntervalReq(); return __ConIntervalReq; }
			set { __ConIntervalReq = value; }
		}

		[XmlElement(Type=typeof(Hafas.ConScrReq),ElementName="ConScrReq",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ConScrReq __ConScrReq;
		
		[XmlIgnore]
		public Hafas.ConScrReq ConScrReq
		{
			get { if (__ConScrReq == null) __ConScrReq = new Hafas.ConScrReq(); return __ConScrReq; }
			set { __ConScrReq = value; }
		}

		[XmlElement(Type=typeof(Hafas.ConReconstructionReq),ElementName="ConReconstructionReq",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ConReconstructionReq __ConReconstructionReq;
		
		[XmlIgnore]
		public Hafas.ConReconstructionReq ConReconstructionReq
		{
			get { if (__ConReconstructionReq == null) __ConReconstructionReq = new Hafas.ConReconstructionReq(); return __ConReconstructionReq; }
			set { __ConReconstructionReq = value; }
		}

		[XmlElement(Type=typeof(Hafas.JourneyReq),ElementName="JourneyReq",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JourneyReq __JourneyReq;
		
		[XmlIgnore]
		public Hafas.JourneyReq JourneyReq
		{
			get { if (__JourneyReq == null) __JourneyReq = new Hafas.JourneyReq(); return __JourneyReq; }
			set { __JourneyReq = value; }
		}

		[XmlElement(Type=typeof(Hafas.DirectTrainReq),ElementName="DirectTrainReq",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.DirectTrainReq __DirectTrainReq;
		
		[XmlIgnore]
		public Hafas.DirectTrainReq DirectTrainReq
		{
			get { if (__DirectTrainReq == null) __DirectTrainReq = new Hafas.DirectTrainReq(); return __DirectTrainReq; }
			set { __DirectTrainReq = value; }
		}

		[XmlElement(Type=typeof(Hafas.TrainSearchReq),ElementName="TrainSearchReq",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.TrainSearchReq __TrainSearchReq;
		
		[XmlIgnore]
		public Hafas.TrainSearchReq TrainSearchReq
		{
			get { if (__TrainSearchReq == null) __TrainSearchReq = new Hafas.TrainSearchReq(); return __TrainSearchReq; }
			set { __TrainSearchReq = value; }
		}

		public ReqC()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="LocValReq",IsNullable=false),DataContract]
	public class LocValReq : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="id",DataType="ID")]
		public string __id;
		
		[XmlIgnore]
		public string id
		{ 
			get { return __id; }
			set { __id = value; RaisePropertyChanged("id"); }
		}

		[XmlAttribute(AttributeName="maxNr",DataType="integer")]
		public string __maxNr;
		
		[XmlIgnore]
		public string maxNr
		{ 
			get { return __maxNr; }
			set { __maxNr = value; RaisePropertyChanged("maxNr"); }
		}

		[XmlAttribute(AttributeName="sMode",DataType="integer")]
		public string __sMode;
		
		[XmlIgnore]
		public string sMode
		{ 
			get { return __sMode; }
			set { __sMode = value; RaisePropertyChanged("sMode"); }
		}

		[XmlElement(Type=typeof(Hafas.ReqLoc),ElementName="ReqLoc",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ReqLoc __ReqLoc;
		
		[XmlIgnore]
		public Hafas.ReqLoc ReqLoc
		{
			get { if (__ReqLoc == null) __ReqLoc = new Hafas.ReqLoc(); return __ReqLoc; }
			set { __ReqLoc = value; }
		}

		public LocValReq()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ReqLoc",IsNullable=false),DataContract]
	public class ReqLoc : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="type")]
		public type2 __type;
		
		[XmlIgnore]
		public bool __typeSpecified;
		
		[XmlIgnore]
		public type2 type
		{ 
			get { return __type; }
			set { __type = value; __typeSpecified = true; RaisePropertyChanged("type"); }
		}

		[XmlAttribute(AttributeName="stFlag",DataType="string")]
		public string __stFlag;
		
		[XmlIgnore]
		public string stFlag
		{ 
			get { return __stFlag; }
			set { __stFlag = value; RaisePropertyChanged("stFlag"); }
		}

		[XmlAttribute(AttributeName="refine",DataType="string")]
		public string __refine;
		
		[XmlIgnore]
		public string refine
		{ 
			get { return __refine; }
			set { __refine = value; RaisePropertyChanged("refine"); }
		}

		[XmlAttribute(AttributeName="match",DataType="string")]
		public string __match;
		
		[XmlIgnore]
		public string match
		{ 
			get { return __match; }
			set { __match = value; RaisePropertyChanged("match"); }
		}

		[XmlAttribute(AttributeName="output",DataType="string")]
		public string __output;
		
		[XmlIgnore]
		public string output
		{ 
			get { return __output; }
			set { __output = value; RaisePropertyChanged("output"); }
		}

		public ReqLoc()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="LocValRes",IsNullable=false),DataContract]
	public class LocValRes : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="id",DataType="ID")]
		public string __id;
		
		[XmlIgnore]
		public string id
		{ 
			get { return __id; }
			set { __id = value; RaisePropertyChanged("id"); }
		}

		[XmlAttribute(AttributeName="flag")]
		public flag __flag;
		
		[XmlIgnore]
		public bool __flagSpecified;
		
		[XmlIgnore]
		public flag flag
		{ 
			get { return __flag; }
			set { __flag = value; __flagSpecified = true; RaisePropertyChanged("flag"); }
		}

		[XmlElement(Type=typeof(Hafas.Err),ElementName="Err",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Err> __Err;
		
		[XmlIgnore]
		public List<Hafas.Err> Err
		{
			get { if (__Err == null) __Err = new List<Hafas.Err>(); return __Err; }
			set { __Err = value; }
		}

		[XmlElement(Type=typeof(Hafas.Address),ElementName="Address",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Address __Address;
		
		[XmlIgnore]
		public Hafas.Address Address
		{
			get { if (__Address == null) __Address = new Hafas.Address(); return __Address; }
			set { __Address = value; }
		}

		[XmlElement(Type=typeof(Hafas.Poi),ElementName="Poi",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Poi __Poi;
		
		[XmlIgnore]
		public Hafas.Poi Poi
		{
			get { if (__Poi == null) __Poi = new Hafas.Poi(); return __Poi; }
			set { __Poi = value; }
		}

		[XmlElement(Type=typeof(Hafas.Station),ElementName="Station",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Station __Station;
		
		[XmlIgnore]
		public Hafas.Station Station
		{
			get { if (__Station == null) __Station = new Hafas.Station(); return __Station; }
			set { __Station = value; }
		}

		[XmlElement(Type=typeof(Hafas.ReqLoc),ElementName="ReqLoc",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.ReqLoc> __ReqLoc;
		
		[XmlIgnore]
		public List<Hafas.ReqLoc> ReqLoc
		{
			get { if (__ReqLoc == null) __ReqLoc = new List<Hafas.ReqLoc>(); return __ReqLoc; }
			set { __ReqLoc = value; }
		}

		public LocValRes()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Err",IsNullable=false),DataContract]
	public class Err : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="code",DataType="token")]
		public string __code;
		
		[XmlIgnore]
		public string code
		{ 
			get { return __code; }
			set { __code = value; RaisePropertyChanged("code"); }
		}

		[XmlAttribute(AttributeName="text",DataType="string")]
		public string __text;
		
		[XmlIgnore]
		public string text
		{ 
			get { return __text; }
			set { __text = value; RaisePropertyChanged("text"); }
		}

		[XmlAttribute(AttributeName="level")]
		public level __level;
		
		[XmlIgnore]
		public bool __levelSpecified;
		
		[XmlIgnore]
		public level level
		{ 
			get { return __level; }
			set { __level = value; __levelSpecified = true; RaisePropertyChanged("level"); }
		}

		public Err()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="FilterList",IsNullable=false),DataContract]
	public class FilterList : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.ConReqAttrFilter),ElementName="ConReqAttrFilter",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ConReqAttrFilter __ConReqAttrFilter;
		
		[XmlIgnore]
		public Hafas.ConReqAttrFilter ConReqAttrFilter
		{
			get { if (__ConReqAttrFilter == null) __ConReqAttrFilter = new Hafas.ConReqAttrFilter(); return __ConReqAttrFilter; }
			set { __ConReqAttrFilter = value; }
		}

		public FilterList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ConReqAttrFilter",IsNullable=false),DataContract]
	public class ConReqAttrFilter : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="mode",DataType="int")]
		public int __mode;
		
		[XmlIgnore]
		public bool __modeSpecified;
		
		[XmlIgnore]
		public int mode
		{ 
			get { return __mode; }
			set { __mode = value; __modeSpecified = true; RaisePropertyChanged("mode"); }
		}

		[XmlAttribute(AttributeName="type")]
		public type23 __type;
		
		[XmlIgnore]
		public bool __typeSpecified;
		
		[XmlIgnore]
		public type23 type
		{ 
			get { return __type; }
			set { __type = value; __typeSpecified = true; RaisePropertyChanged("type"); }
		}

		[XmlAttribute(AttributeName="value",DataType="string")]
		public string __value;
		
		[XmlIgnore]
		public string @value
		{ 
			get { return __value; }
			set { __value = value; RaisePropertyChanged("@value"); }
		}

		public ConReqAttrFilter()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="PlanDataReq",IsNullable=false),DataContract]
	public class PlanDataReq : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="connectionPoolsOnly",DataType="boolean")]
		public bool __connectionPoolsOnly;
		
		[XmlIgnore]
		public bool __connectionPoolsOnlySpecified;
		
		[XmlIgnore]
		public bool connectionPoolsOnly
		{ 
			get { return __connectionPoolsOnly; }
			set { __connectionPoolsOnly = value; __connectionPoolsOnlySpecified = true; RaisePropertyChanged("connectionPoolsOnly"); }
		}

		[XmlAttribute(AttributeName="eliminateDoubleStations",DataType="boolean")]
		public bool __eliminateDoubleStations;
		
		[XmlIgnore]
		public bool __eliminateDoubleStationsSpecified;
		
		[XmlIgnore]
		public bool eliminateDoubleStations
		{ 
			get { return __eliminateDoubleStations; }
			set { __eliminateDoubleStations = value; __eliminateDoubleStationsSpecified = true; RaisePropertyChanged("eliminateDoubleStations"); }
		}

		[XmlAttribute(AttributeName="poolNumber",DataType="int")]
		public int __poolNumber;
		
		[XmlIgnore]
		public bool __poolNumberSpecified;
		
		[XmlIgnore]
		public int poolNumber
		{ 
			get { return __poolNumber; }
			set { __poolNumber = value; __poolNumberSpecified = true; RaisePropertyChanged("poolNumber"); }
		}

		public PlanDataReq()
		{
		}

        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ConReq",IsNullable=false),DataContract]
	public class ConReq : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="needReqParamInResult")]
		public string __needReqParamInResult;
		
		[XmlIgnore]
		public string needReqParamInResult
		{ 
			get { return __needReqParamInResult; }
			set { __needReqParamInResult = value; RaisePropertyChanged("needReqParamInResult"); }
		}

		[XmlAttribute(AttributeName="needServiceBitfield")]
		public string __needServiceBitfield;
		
		[XmlIgnore]
		public string needServiceBitfield
		{ 
			get { return __needServiceBitfield; }
			set { __needServiceBitfield = value; RaisePropertyChanged("needServiceBitfield"); }
		}

		[XmlAttribute(AttributeName="HandicapProfile")]
		public string __HandicapProfile;
		
		[XmlIgnore]
		public string HandicapProfile
		{ 
			get { return __HandicapProfile; }
			set { __HandicapProfile = value; RaisePropertyChanged("HandicapProfile"); }
		}

		[XmlElement(Type=typeof(Hafas.Start),ElementName="Start",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Start __Start;
		
		[XmlIgnore]
		public Hafas.Start Start
		{
			get { if (__Start == null) __Start = new Hafas.Start(); return __Start; }
			set { __Start = value; }
		}

		[XmlElement(Type=typeof(Hafas.Dest),ElementName="Dest",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Dest __Dest;
		
		[XmlIgnore]
		public Hafas.Dest Dest
		{
			get { if (__Dest == null) __Dest = new Hafas.Dest(); return __Dest; }
			set { __Dest = value; }
		}

		[XmlElement(Type=typeof(Hafas.Via),ElementName="Via",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Via> __Via;
		
		[XmlIgnore]
		public List<Hafas.Via> Via
		{
			get { if (__Via == null) __Via = new List<Hafas.Via>(); return __Via; }
			set { __Via = value; }
		}

		[XmlElement(Type=typeof(Hafas.ReqT),ElementName="ReqT",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ReqT __ReqT;
		
		[XmlIgnore]
		public Hafas.ReqT ReqT
		{
			get { if (__ReqT == null) __ReqT = new Hafas.ReqT(); return __ReqT; }
			set { __ReqT = value; }
		}

		[XmlElement(Type=typeof(Hafas.RFlags),ElementName="RFlags",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.RFlags __RFlags;
		
		[XmlIgnore]
		public Hafas.RFlags RFlags
		{
			get { if (__RFlags == null) __RFlags = new Hafas.RFlags(); return __RFlags; }
			set { __RFlags = value; }
		}

		[XmlElement(Type=typeof(Hafas.GISParameters),ElementName="GISParameters",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.GISParameters __GISParameters;
		
		[XmlIgnore]
		public Hafas.GISParameters GISParameters
		{
			get { if (__GISParameters == null) __GISParameters = new Hafas.GISParameters(); return __GISParameters; }
			set { __GISParameters = value; }
		}

		[XmlElement(Type=typeof(Hafas.ECOParameters),ElementName="ECOParameters",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ECOParameters __ECOParameters;
		
		[XmlIgnore]
		public Hafas.ECOParameters ECOParameters
		{
			get { if (__ECOParameters == null) __ECOParameters = new Hafas.ECOParameters(); return __ECOParameters; }
			set { __ECOParameters = value; }
		}

		[XmlElement(Type=typeof(Hafas.FilterList),ElementName="FilterList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.FilterList __FilterList;
		
		[XmlIgnore]
		public Hafas.FilterList FilterList
		{
			get { if (__FilterList == null) __FilterList = new Hafas.FilterList(); return __FilterList; }
			set { __FilterList = value; }
		}

		public ConReq()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="GISParameters",IsNullable=false),DataContract]
	public class GISParameters : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.Front),ElementName="Front",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Front __Front;
		
		[XmlIgnore]
		public Hafas.Front Front
		{
			get { if (__Front == null) __Front = new Hafas.Front(); return __Front; }
			set { __Front = value; }
		}

		[XmlElement(Type=typeof(Hafas.Back),ElementName="Back",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Back __Back;
		
		[XmlIgnore]
		public Hafas.Back Back
		{
			get { if (__Back == null) __Back = new Hafas.Back(); return __Back; }
			set { __Back = value; }
		}

		public GISParameters()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Front",IsNullable=false),DataContract]
	public class Front : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return IndividualTransport.GetEnumerator();
		}

		public void Add(Hafas.IndividualTransport obj)
		{
			IndividualTransport.Add(obj);
		}

		[XmlIgnore]
		public Hafas.IndividualTransport this[int index]
		{
			get { return (Hafas.IndividualTransport) IndividualTransport[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return IndividualTransport.Count; }
        }

        public void Clear()
		{
			IndividualTransport.Clear();
        }

		public Hafas.IndividualTransport Remove(int index) 
		{ 
            Hafas.IndividualTransport obj = IndividualTransport[index];
            IndividualTransport.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.IndividualTransport obj)
		{
            return IndividualTransport.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.IndividualTransport),ElementName="IndividualTransport",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.IndividualTransport> __IndividualTransport;
		
		[XmlIgnore]
		public List<Hafas.IndividualTransport> IndividualTransport
		{
			get { if (__IndividualTransport == null) __IndividualTransport = new List<Hafas.IndividualTransport>(); return __IndividualTransport; }
			set { __IndividualTransport = value; }
		}

		public Front()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Back",IsNullable=false),DataContract]
	public class Back : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return IndividualTransport.GetEnumerator();
		}

		public void Add(Hafas.IndividualTransport obj)
		{
			IndividualTransport.Add(obj);
		}

		[XmlIgnore]
		public Hafas.IndividualTransport this[int index]
		{
			get { return (Hafas.IndividualTransport) IndividualTransport[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return IndividualTransport.Count; }
        }

        public void Clear()
		{
			IndividualTransport.Clear();
        }

		public Hafas.IndividualTransport Remove(int index) 
		{ 
            Hafas.IndividualTransport obj = IndividualTransport[index];
            IndividualTransport.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.IndividualTransport obj)
		{
            return IndividualTransport.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.IndividualTransport),ElementName="IndividualTransport",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.IndividualTransport> __IndividualTransport;
		
		[XmlIgnore]
		public List<Hafas.IndividualTransport> IndividualTransport
		{
			get { if (__IndividualTransport == null) __IndividualTransport = new List<Hafas.IndividualTransport>(); return __IndividualTransport; }
			set { __IndividualTransport = value; }
		}

		public Back()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="IndividualTransport",IsNullable=false),DataContract]
	public class IndividualTransport : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="type")]
		public type234 __type;
		
		[XmlIgnore]
		public bool __typeSpecified;
		
		[XmlIgnore]
		public type234 type
		{ 
			get { return __type; }
			set { __type = value; __typeSpecified = true; RaisePropertyChanged("type"); }
		}

		[XmlAttribute(AttributeName="minDist",DataType="integer")]
		public string __minDist;
		
		[XmlIgnore]
		public string minDist
		{ 
			get { return __minDist; }
			set { __minDist = value; RaisePropertyChanged("minDist"); }
		}

		[XmlAttribute(AttributeName="maxDist",DataType="integer")]
		public string __maxDist;
		
		[XmlIgnore]
		public string maxDist
		{ 
			get { return __maxDist; }
			set { __maxDist = value; RaisePropertyChanged("maxDist"); }
		}

		[XmlAttribute(AttributeName="max_duration",DataType="integer")]
		public string __max_duration;
		
		[XmlIgnore]
		public string max_duration
		{ 
			get { return __max_duration; }
			set { __max_duration = value; RaisePropertyChanged("max_duration"); }
		}

		[XmlAttribute(AttributeName="cost",DataType="integer")]
		public string __cost;
		
		[XmlIgnore]
		public string cost
		{ 
			get { return __cost; }
			set { __cost = value; RaisePropertyChanged("cost"); }
		}

		[XmlAttribute(AttributeName="speed",DataType="integer")]
		public string __speed;
		
		[XmlIgnore]
		public string speed
		{ 
			get { return __speed; }
			set { __speed = value; RaisePropertyChanged("speed"); }
		}

		public IndividualTransport()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ConScrReq",IsNullable=false),DataContract]
	public class ConScrReq : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="scrDir")]
		public scrDir __scrDir;
		
		[XmlIgnore]
		public bool __scrDirSpecified;
		
		[XmlIgnore]
		public scrDir scrDir
		{ 
			get { return __scrDir; }
			set { __scrDir = value; __scrDirSpecified = true; RaisePropertyChanged("scrDir"); }
		}

		[XmlAttribute(AttributeName="nrCons")]
		public string __nrCons;
		
		[XmlIgnore]
		public string nrCons
		{ 
			get { return __nrCons; }
			set { __nrCons = value; RaisePropertyChanged("nrCons"); }
		}

		[XmlElement(Type=typeof(Hafas.ConResCtxt),ElementName="ConResCtxt",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ConResCtxt __ConResCtxt;
		
		[XmlIgnore]
		public Hafas.ConResCtxt ConResCtxt
		{
			get { if (__ConResCtxt == null) __ConResCtxt = new Hafas.ConResCtxt(); return __ConResCtxt; }
			set { __ConResCtxt = value; }
		}

		public ConScrReq()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Start",IsNullable=false),DataContract]
	public class Start : Hafas.StartViaType, INotifyPropertyChanged
	{

		public Start() : base()
		{
		}
	}

	[XmlRoot(ElementName="Via",IsNullable=false),DataContract]
	public class Via : Hafas.ViaType, INotifyPropertyChanged
	{

		public Via() : base()
		{
		}
	}

	[XmlRoot(ElementName="Dest",IsNullable=false),DataContract]
	public class Dest : Hafas.RequestLocationType, INotifyPropertyChanged
	{

		public Dest() : base()
		{
		}
	}

	[XmlRoot(ElementName="Prod",IsNullable=false),DataContract]
	public class Prod : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="prod",DataType="string")]
		public string __prod;
		
		[XmlIgnore]
		public string prod
		{ 
			get { return __prod; }
			set { __prod = value; RaisePropertyChanged("prod"); }
		}

		[XmlAttribute(AttributeName="direct")]
		public direct __direct;
		
		[XmlIgnore]
		public bool __directSpecified;
		
		[XmlIgnore]
		public direct direct
		{ 
			get { return __direct; }
			set { __direct = value; __directSpecified = true; RaisePropertyChanged("direct"); }
		}

		[XmlAttribute(AttributeName="sleeper")]
		public sleeper __sleeper;
		
		[XmlIgnore]
		public bool __sleeperSpecified;
		
		[XmlIgnore]
		public sleeper sleeper
		{ 
			get { return __sleeper; }
			set { __sleeper = value; __sleeperSpecified = true; RaisePropertyChanged("sleeper"); }
		}

		[XmlAttribute(AttributeName="couchette")]
		public couchette __couchette;
		
		[XmlIgnore]
		public bool __couchetteSpecified;
		
		[XmlIgnore]
		public couchette couchette
		{ 
			get { return __couchette; }
			set { __couchette = value; __couchetteSpecified = true; RaisePropertyChanged("couchette"); }
		}

		public Prod()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ReqT",IsNullable=false),DataContract]
	public class ReqT : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="time",DataType="token")]
		public string __time;
		
		[XmlIgnore]
		public string @time
		{ 
			get { return __time; }
			set { __time = value; RaisePropertyChanged("@time"); }
		}

		[XmlAttribute(AttributeName="date",DataType="token")]
		public string __date;
		
		[XmlIgnore]
		public string date
		{ 
			get { return __date; }
			set { __date = value; RaisePropertyChanged("date"); }
		}

		[XmlAttribute(AttributeName="a")]
		public a2 __a;
		
		[XmlIgnore]
		public bool __aSpecified;
		
		[XmlIgnore]
		public a2 a
		{ 
			get { return __a; }
			set { __a = value; __aSpecified = true; RaisePropertyChanged("a"); }
		}

		public ReqT()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ReqIT",IsNullable=false),DataContract]
	public class ReqIT : Hafas.ReqTType, INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="iDuration")]
		public string __iDuration;
		
		[XmlIgnore]
		public string iDuration
		{ 
			get { return __iDuration; }
			set { __iDuration = value; RaisePropertyChanged("iDuration"); }
		}

		public ReqIT() : base()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="RFlags",IsNullable=false),DataContract]
	public class RFlags : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="b")]
		public string __b;
		
		[XmlIgnore]
		public string b
		{ 
			get { return __b; }
			set { __b = value; RaisePropertyChanged("b"); }
		}

		[XmlAttribute(AttributeName="f")]
		public string __f;
		
		[XmlIgnore]
		public string f
		{ 
			get { return __f; }
			set { __f = value; RaisePropertyChanged("f"); }
		}

		[XmlAttribute(AttributeName="nrChanges",DataType="int")]
		public int __nrChanges;
		
		[XmlIgnore]
		public bool __nrChangesSpecified;
		
		[XmlIgnore]
		public int nrChanges
		{ 
			get { return __nrChanges; }
			set { __nrChanges = value; __nrChangesSpecified = true; RaisePropertyChanged("nrChanges"); }
		}

		[XmlAttribute(AttributeName="chExtension",DataType="int")]
		public int __chExtension;
		
		[XmlIgnore]
		public bool __chExtensionSpecified;
		
		[XmlIgnore]
		public int chExtension
		{ 
			get { return __chExtension; }
			set { __chExtension = value; __chExtensionSpecified = true; RaisePropertyChanged("chExtension"); }
		}

		[XmlAttribute(AttributeName="minChTime",DataType="integer")]
		public string __minChTime;
		
		[XmlIgnore]
		public string minChTime
		{ 
			get { return __minChTime; }
			set { __minChTime = value; RaisePropertyChanged("minChTime"); }
		}

		[XmlAttribute(AttributeName="maxChTime",DataType="integer")]
		public string __maxChTime;
		
		[XmlIgnore]
		public string maxChTime
		{ 
			get { return __maxChTime; }
			set { __maxChTime = value; RaisePropertyChanged("maxChTime"); }
		}

		[XmlAttribute(AttributeName="sMode")]
		public sMode __sMode;
		
		[XmlIgnore]
		public bool __sModeSpecified;
		
		[XmlIgnore]
		public sMode sMode
		{ 
			get { return __sMode; }
			set { __sMode = value; __sModeSpecified = true; RaisePropertyChanged("sMode"); }
		}

		[XmlAttribute(AttributeName="unsharp",DataType="token")]
		public string __unsharp;
		
		[XmlIgnore]
		public string unsharp
		{ 
			get { return __unsharp; }
			set { __unsharp = value; RaisePropertyChanged("unsharp"); }
		}

		public RFlags()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="RIFlags",IsNullable=false),DataContract]
	public class RIFlags : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="maxCons",DataType="int")]
		public int __maxCons;
		
		[XmlIgnore]
		public bool __maxConsSpecified;
		
		[XmlIgnore]
		public int maxCons
		{ 
			get { return __maxCons; }
			set { __maxCons = value; __maxConsSpecified = true; RaisePropertyChanged("maxCons"); }
		}

		[XmlAttribute(AttributeName="nrChanges",DataType="int")]
		public int __nrChanges;
		
		[XmlIgnore]
		public bool __nrChangesSpecified;
		
		[XmlIgnore]
		public int nrChanges
		{ 
			get { return __nrChanges; }
			set { __nrChanges = value; __nrChangesSpecified = true; RaisePropertyChanged("nrChanges"); }
		}

		[XmlAttribute(AttributeName="chExtension",DataType="int")]
		public int __chExtension;
		
		[XmlIgnore]
		public bool __chExtensionSpecified;
		
		[XmlIgnore]
		public int chExtension
		{ 
			get { return __chExtension; }
			set { __chExtension = value; __chExtensionSpecified = true; RaisePropertyChanged("chExtension"); }
		}

		[XmlAttribute(AttributeName="minChTime",DataType="integer")]
		public string __minChTime;
		
		[XmlIgnore]
		public string minChTime
		{ 
			get { return __minChTime; }
			set { __minChTime = value; RaisePropertyChanged("minChTime"); }
		}

		[XmlAttribute(AttributeName="maxChTime",DataType="integer")]
		public string __maxChTime;
		
		[XmlIgnore]
		public string maxChTime
		{ 
			get { return __maxChTime; }
			set { __maxChTime = value; RaisePropertyChanged("maxChTime"); }
		}

		[XmlAttribute(AttributeName="sMode")]
		public sMode2 __sMode;
		
		[XmlIgnore]
		public bool __sModeSpecified;
		
		[XmlIgnore]
		public sMode2 sMode
		{ 
			get { return __sMode; }
			set { __sMode = value; __sModeSpecified = true; RaisePropertyChanged("sMode"); }
		}

		[XmlAttribute(AttributeName="unsharp",DataType="token")]
		public string __unsharp;
		
		[XmlIgnore]
		public string unsharp
		{ 
			get { return __unsharp; }
			set { __unsharp = value; RaisePropertyChanged("unsharp"); }
		}

		public RIFlags()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ResC",IsNullable=false),DataContract]
	public class ResC : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="ver",DataType="string")]
		public string __ver;
		
		[XmlIgnore]
		public string ver
		{ 
			get { return __ver; }
			set { __ver = value; RaisePropertyChanged("ver"); }
		}

		[XmlAttribute(AttributeName="prod",DataType="string")]
		public string __prod;
		
		[XmlIgnore]
		public string prod
		{ 
			get { return __prod; }
			set { __prod = value; RaisePropertyChanged("prod"); }
		}

		[XmlAttribute(AttributeName="lang")]
		public lang2 __lang;
		
		[XmlIgnore]
		public bool __langSpecified;
		
		[XmlIgnore]
		public lang2 lang
		{ 
			get { return __lang; }
			set { __lang = value; __langSpecified = true; RaisePropertyChanged("lang"); }
		}

		[XmlAttribute(AttributeName="accessId",DataType="string")]
		public string __accessId;
		
		[XmlIgnore]
		public string accessId
		{ 
			get { return __accessId; }
			set { __accessId = value; RaisePropertyChanged("accessId"); }
		}

		[XmlElement(Type=typeof(Hafas.Err),ElementName="Err",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Err> __Err;
		
		[XmlIgnore]
		public List<Hafas.Err> Err
		{
			get { if (__Err == null) __Err = new List<Hafas.Err>(); return __Err; }
			set { __Err = value; }
		}

		[XmlElement(Type=typeof(Hafas.ConRes),ElementName="ConRes",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ConRes __ConRes;
		
		[XmlIgnore]
		public Hafas.ConRes ConRes
		{
			get { if (__ConRes == null) __ConRes = new Hafas.ConRes(); return __ConRes; }
			set { __ConRes = value; }
		}

		[XmlElement(Type=typeof(Hafas.LocValRes),ElementName="LocValRes",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.LocValRes> __LocValRes;
		
		[XmlIgnore]
		public List<Hafas.LocValRes> LocValRes
		{
			get { if (__LocValRes == null) __LocValRes = new List<Hafas.LocValRes>(); return __LocValRes; }
			set { __LocValRes = value; }
		}

		[XmlElement(Type=typeof(Hafas.STBRes),ElementName="STBRes",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.STBRes __STBRes;
		
		[XmlIgnore]
		public Hafas.STBRes STBRes
		{
			get { if (__STBRes == null) __STBRes = new Hafas.STBRes(); return __STBRes; }
			set { __STBRes = value; }
		}

		[XmlElement(Type=typeof(Hafas.JourneyRes),ElementName="JourneyRes",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JourneyRes __JourneyRes;
		
		[XmlIgnore]
		public Hafas.JourneyRes JourneyRes
		{
			get { if (__JourneyRes == null) __JourneyRes = new Hafas.JourneyRes(); return __JourneyRes; }
			set { __JourneyRes = value; }
		}

		[XmlElement(Type=typeof(Hafas.TrainSearchRes),ElementName="TrainSearchRes",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.TrainSearchRes __TrainSearchRes;
		
		[XmlIgnore]
		public Hafas.TrainSearchRes TrainSearchRes
		{
			get { if (__TrainSearchRes == null) __TrainSearchRes = new Hafas.TrainSearchRes(); return __TrainSearchRes; }
			set { __TrainSearchRes = value; }
		}

		public ResC()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ConRes",IsNullable=false),DataContract]
	public class ConRes : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="dir")]
		public dir __dir;
		
		[XmlIgnore]
		public bool __dirSpecified;
		
		[XmlIgnore]
		public dir dir
		{ 
			get { return __dir; }
			set { __dir = value; __dirSpecified = true; RaisePropertyChanged("dir"); }
		}

		[XmlAttribute(AttributeName="firstConDiffersFromReqDate",DataType="boolean")]
		public bool __firstConDiffersFromReqDate;
		
		[XmlIgnore]
		public bool __firstConDiffersFromReqDateSpecified;
		
		[XmlIgnore]
		public bool firstConDiffersFromReqDate
		{ 
			get { return __firstConDiffersFromReqDate; }
			set { __firstConDiffersFromReqDate = value; __firstConDiffersFromReqDateSpecified = true; RaisePropertyChanged("firstConDiffersFromReqDate"); }
		}

		[XmlElement(Type=typeof(Hafas.Err),ElementName="Err",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Err> __Err;
		
		[XmlIgnore]
		public List<Hafas.Err> Err
		{
			get { if (__Err == null) __Err = new List<Hafas.Err>(); return __Err; }
			set { __Err = value; }
		}

		[XmlElement(Type=typeof(Hafas.ConResCtxt),ElementName="ConResCtxt",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ConResCtxt __ConResCtxt;
		
		[XmlIgnore]
		public Hafas.ConResCtxt ConResCtxt
		{
			get { if (__ConResCtxt == null) __ConResCtxt = new Hafas.ConResCtxt(); return __ConResCtxt; }
			set { __ConResCtxt = value; }
		}

		[XmlElement(Type=typeof(Hafas.ConnectionList),ElementName="ConnectionList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.ConnectionList> __ConnectionList;
		
		[XmlIgnore]
		public List<Hafas.ConnectionList> ConnectionList
		{
			get { if (__ConnectionList == null) __ConnectionList = new List<Hafas.ConnectionList>(); return __ConnectionList; }
			set { __ConnectionList = value; }
		}

		[XmlElement(ElementName="ReqParam",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __ReqParam;
		
		[XmlIgnore]
		public string ReqParam
		{ 
			get { return __ReqParam; }
			set { __ReqParam = value; RaisePropertyChanged("ReqParam"); }
		}

		public ConRes()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ConnectionList",IsNullable=false),DataContract]
	public class ConnectionList : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="type")]
		public type2345 __type;
		
		[XmlIgnore]
		public bool __typeSpecified;
		
		[XmlIgnore]
		public type2345 type
		{ 
			get { return __type; }
			set { __type = value; __typeSpecified = true; RaisePropertyChanged("type"); }
		}

		[XmlElement(Type=typeof(Hafas.Err),ElementName="Err",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Err __Err;
		
		[XmlIgnore]
		public Hafas.Err Err
		{
			get { if (__Err == null) __Err = new Hafas.Err(); return __Err; }
			set { __Err = value; }
		}

		[XmlElement(Type=typeof(Hafas.Connection),ElementName="Connection",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Connection> __Connection;
		
		[XmlIgnore]
		public List<Hafas.Connection> Connection
		{
			get { if (__Connection == null) __Connection = new List<Hafas.Connection>(); return __Connection; }
			set { __Connection = value; }
		}

		public ConnectionList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ConResCtxt",IsNullable=false),DataContract]
	public class ConResCtxt : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="b")]
		public b __b;
		
		[XmlIgnore]
		public bool __bSpecified;
		
		[XmlIgnore]
		public b b
		{ 
			get { return __b; }
			set { __b = value; __bSpecified = true; RaisePropertyChanged("b"); }
		}

		[XmlAttribute(AttributeName="f")]
		public f __f;
		
		[XmlIgnore]
		public bool __fSpecified;
		
		[XmlIgnore]
		public f f
		{ 
			get { return __f; }
			set { __f = value; __fSpecified = true; RaisePropertyChanged("f"); }
		}

		[XmlText(DataType="string")]
		public string __Value;
		
		[XmlIgnore]
		public string Value
		{ 
			get { return __Value; }
			set { __Value = value; RaisePropertyChanged("Value"); }
		}

		public ConResCtxt()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Time",IsNullable=false),DataContract]
	public class @Time : INotifyPropertyChanged
	{

		[XmlText(DataType="string")]
		public string __Value;
		
		[XmlIgnore]
		public string Value
		{ 
			get { return __Value; }
			set { __Value = value; RaisePropertyChanged("Value"); }
		}

		public @Time()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Coord",IsNullable=false),DataContract]
	public class Coord : Hafas.LocationType, INotifyPropertyChanged
	{

		public Coord() : base()
		{
		}
	}

	[XmlRoot(ElementName="Station",IsNullable=false),DataContract]
	public class Station : Hafas.StationType, INotifyPropertyChanged
	{

		public Station() : base()
		{
		}
	}

	[XmlRoot(ElementName="Address",IsNullable=false),DataContract]
	public class Address : Hafas.StationType, INotifyPropertyChanged
	{

		public Address() : base()
		{
		}
	}

	[XmlRoot(ElementName="Poi",IsNullable=false),DataContract]
	public class Poi : Hafas.StationType, INotifyPropertyChanged
	{

		public Poi() : base()
		{
		}
	}

	[XmlRoot(ElementName="Text",IsNullable=false),DataContract]
	public class Text : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="lang")]
		public lang23 __lang;
		
		[XmlIgnore]
		public bool __langSpecified;
		
		[XmlIgnore]
		public lang23 lang
		{ 
			get { return __lang; }
			set { __lang = value; __langSpecified = true; RaisePropertyChanged("lang"); }
		}

		[XmlText(DataType="string")]
		public string __Value;
		
		[XmlIgnore]
		public string Value
		{ 
			get { return __Value; }
			set { __Value = value; RaisePropertyChanged("Value"); }
		}

		public Text()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="NamedValue",IsNullable=false),DataContract]
	public class NamedValue : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="name",DataType="string")]
		public string __name;
		
		[XmlIgnore]
		public string name
		{ 
			get { return __name; }
			set { __name = value; RaisePropertyChanged("name"); }
		}

		[XmlAttribute(AttributeName="value",DataType="string")]
		public string __value;
		
		[XmlIgnore]
		public string @value
		{ 
			get { return __value; }
			set { __value = value; RaisePropertyChanged("@value"); }
		}

		public NamedValue()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ServiceDays",IsNullable=false),DataContract]
	public class ServiceDays : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="from",DataType="int")]
		public int __from;
		
		[XmlIgnore]
		public bool __fromSpecified;
		
		[XmlIgnore]
		public int from
		{ 
			get { return __from; }
			set { __from = value; __fromSpecified = true; RaisePropertyChanged("from"); }
		}

		[XmlAttribute(AttributeName="to",DataType="int")]
		public int __to;
		
		[XmlIgnore]
		public bool __toSpecified;
		
		[XmlIgnore]
		public int to
		{ 
			get { return __to; }
			set { __to = value; __toSpecified = true; RaisePropertyChanged("to"); }
		}

		[XmlElement(ElementName="ServiceBits",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		public string __ServiceBits;
		
		[XmlIgnore]
		public string ServiceBits
		{ 
			get { return __ServiceBits; }
			set { __ServiceBits = value; RaisePropertyChanged("ServiceBits"); }
		}

		[XmlElement(Type=typeof(Hafas.RegularServiceText),ElementName="RegularServiceText",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.RegularServiceText __RegularServiceText;
		
		[XmlIgnore]
		public Hafas.RegularServiceText RegularServiceText
		{
			get { if (__RegularServiceText == null) __RegularServiceText = new Hafas.RegularServiceText(); return __RegularServiceText; }
			set { __RegularServiceText = value; }
		}

		[XmlElement(Type=typeof(Hafas.IrregularServiceText),ElementName="IrregularServiceText",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.IrregularServiceText __IrregularServiceText;
		
		[XmlIgnore]
		public Hafas.IrregularServiceText IrregularServiceText
		{
			get { if (__IrregularServiceText == null) __IrregularServiceText = new Hafas.IrregularServiceText(); return __IrregularServiceText; }
			set { __IrregularServiceText = value; }
		}

		public ServiceDays()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="RegularServiceText",IsNullable=false),DataContract]
	public class RegularServiceText : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return Text.GetEnumerator();
		}

		public void Add(Hafas.Text obj)
		{
			Text.Add(obj);
		}

		[XmlIgnore]
		public Hafas.Text this[int index]
		{
			get { return (Hafas.Text) Text[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return Text.Count; }
        }

        public void Clear()
		{
			Text.Clear();
        }

		public Hafas.Text Remove(int index) 
		{ 
            Hafas.Text obj = Text[index];
            Text.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.Text obj)
		{
            return Text.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.Text),ElementName="Text",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Text> __Text;
		
		[XmlIgnore]
		public List<Hafas.Text> Text
		{
			get { if (__Text == null) __Text = new List<Hafas.Text>(); return __Text; }
			set { __Text = value; }
		}

		public RegularServiceText()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="IrregularServiceText",IsNullable=false),DataContract]
	public class IrregularServiceText : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return Text.GetEnumerator();
		}

		public void Add(Hafas.Text obj)
		{
			Text.Add(obj);
		}

		[XmlIgnore]
		public Hafas.Text this[int index]
		{
			get { return (Hafas.Text) Text[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return Text.Count; }
        }

        public void Clear()
		{
			Text.Clear();
        }

		public Hafas.Text Remove(int index) 
		{ 
            Hafas.Text obj = Text[index];
            Text.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.Text obj)
		{
            return Text.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.Text),ElementName="Text",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Text> __Text;
		
		[XmlIgnore]
		public List<Hafas.Text> Text
		{
			get { if (__Text == null) __Text = new List<Hafas.Text>(); return __Text; }
			set { __Text = value; }
		}

		public IrregularServiceText()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Attribute",IsNullable=false),DataContract]
	public class Attribute : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return AttributeVariant.GetEnumerator();
		}

		public void Add(Hafas.AttributeVariant obj)
		{
			AttributeVariant.Add(obj);
		}

		[XmlIgnore]
		public Hafas.AttributeVariant this[int index]
		{
			get { return (Hafas.AttributeVariant) AttributeVariant[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return AttributeVariant.Count; }
        }

        public void Clear()
		{
			AttributeVariant.Clear();
        }

		public Hafas.AttributeVariant Remove(int index) 
		{ 
            Hafas.AttributeVariant obj = AttributeVariant[index];
            AttributeVariant.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.AttributeVariant obj)
		{
            return AttributeVariant.Remove(obj);
        }

		[XmlAttribute(AttributeName="priority",DataType="integer")]
		public string __priority;
		
		[XmlIgnore]
		public string priority
		{ 
			get { return __priority; }
			set { __priority = value; RaisePropertyChanged("priority"); }
		}

		[XmlAttribute(AttributeName="type")]
		public type23456 __type;
		
		[XmlIgnore]
		public bool __typeSpecified;
		
		[XmlIgnore]
		public type23456 type
		{ 
			get { return __type; }
			set { __type = value; __typeSpecified = true; RaisePropertyChanged("type"); }
		}

		[XmlAttribute(AttributeName="code",DataType="token")]
		public string __code;
		
		[XmlIgnore]
		public string code
		{ 
			get { return __code; }
			set { __code = value; RaisePropertyChanged("code"); }
		}

		[XmlElement(Type=typeof(Hafas.AttributeVariant),ElementName="AttributeVariant",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.AttributeVariant> __AttributeVariant;
		
		[XmlIgnore]
		public List<Hafas.AttributeVariant> AttributeVariant
		{
			get { if (__AttributeVariant == null) __AttributeVariant = new List<Hafas.AttributeVariant>(); return __AttributeVariant; }
			set { __AttributeVariant = value; }
		}

		public Attribute()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="AttributeVariant",IsNullable=false),DataContract]
	public class AttributeVariant : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return Text.GetEnumerator();
		}

		public void Add(Hafas.Text obj)
		{
			Text.Add(obj);
		}

		[XmlIgnore]
		public Hafas.Text this[int index]
		{
			get { return (Hafas.Text) Text[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return Text.Count; }
        }

        public void Clear()
		{
			Text.Clear();
        }

		public Hafas.Text Remove(int index) 
		{ 
            Hafas.Text obj = Text[index];
            Text.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.Text obj)
		{
            return Text.Remove(obj);
        }

		[XmlAttribute(AttributeName="type")]
		public type234567 __type;
		
		[XmlIgnore]
		public bool __typeSpecified;
		
		[XmlIgnore]
		public type234567 type
		{ 
			get { return __type; }
			set { __type = value; __typeSpecified = true; RaisePropertyChanged("type"); }
		}

		[XmlElement(Type=typeof(Hafas.Text),ElementName="Text",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Text> __Text;
		
		[XmlIgnore]
		public List<Hafas.Text> Text
		{
			get { if (__Text == null) __Text = new List<Hafas.Text>(); return __Text; }
			set { __Text = value; }
		}

		public AttributeVariant()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Connection",IsNullable=false),DataContract]
	public class Connection : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="id",DataType="ID")]
		public string __id;
		
		[XmlIgnore]
		public string id
		{ 
			get { return __id; }
			set { __id = value; RaisePropertyChanged("id"); }
		}

		[XmlElement(Type=typeof(Hafas.RtStateList),ElementName="RtStateList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.RtStateList __RtStateList;
		
		[XmlIgnore]
		public Hafas.RtStateList RtStateList
		{
			get { if (__RtStateList == null) __RtStateList = new Hafas.RtStateList(); return __RtStateList; }
			set { __RtStateList = value; }
		}

		[XmlElement(Type=typeof(Hafas.Overview),ElementName="Overview",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Overview __Overview;
		
		[XmlIgnore]
		public Hafas.Overview Overview
		{
			get { if (__Overview == null) __Overview = new Hafas.Overview(); return __Overview; }
			set { __Overview = value; }
		}

		[XmlElement(Type=typeof(Hafas.ConSectionList),ElementName="ConSectionList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ConSectionList __ConSectionList;
		
		[XmlIgnore]
		public Hafas.ConSectionList ConSectionList
		{
			get { if (__ConSectionList == null) __ConSectionList = new Hafas.ConSectionList(); return __ConSectionList; }
			set { __ConSectionList = value; }
		}

		[XmlElement(Type=typeof(Hafas.IList),ElementName="IList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.IList __IList;
		
		[XmlIgnore]
		public Hafas.IList IList
		{
			get { if (__IList == null) __IList = new Hafas.IList(); return __IList; }
			set { __IList = value; }
		}

		[XmlElement(Type=typeof(Hafas.CommentList),ElementName="CommentList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.CommentList __CommentList;
		
		[XmlIgnore]
		public Hafas.CommentList CommentList
		{
			get { if (__CommentList == null) __CommentList = new Hafas.CommentList(); return __CommentList; }
			set { __CommentList = value; }
		}

		[XmlElement(Type=typeof(Hafas.AltConList),ElementName="AltConList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.AltConList __AltConList;
		
		[XmlIgnore]
		public Hafas.AltConList AltConList
		{
			get { if (__AltConList == null) __AltConList = new Hafas.AltConList(); return __AltConList; }
			set { __AltConList = value; }
		}

		[XmlElement(ElementName="ctxRecon",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		public string __ctxRecon;
		
		[XmlIgnore]
		public string ctxRecon
		{ 
			get { return __ctxRecon; }
			set { __ctxRecon = value; RaisePropertyChanged("ctxRecon"); }
		}

		public Connection()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="RtStateList",IsNullable=false),DataContract]
	public class RtStateList : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return RtState.GetEnumerator();
		}

		public void Add(Hafas.RtState obj)
		{
			RtState.Add(obj);
		}

		[XmlIgnore]
		public Hafas.RtState this[int index]
		{
			get { return (Hafas.RtState) RtState[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return RtState.Count; }
        }

        public void Clear()
		{
			RtState.Clear();
        }

		public Hafas.RtState Remove(int index) 
		{ 
            Hafas.RtState obj = RtState[index];
            RtState.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.RtState obj)
		{
            return RtState.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.RtState),ElementName="RtState",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.RtState> __RtState;
		
		[XmlIgnore]
		public List<Hafas.RtState> RtState
		{
			get { if (__RtState == null) __RtState = new List<Hafas.RtState>(); return __RtState; }
			set { __RtState = value; }
		}

		public RtStateList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="RtState",IsNullable=false),DataContract]
	public class RtState : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="value")]
		public @value __value;
		
		[XmlIgnore]
		public bool __valueSpecified;
		
		[XmlIgnore]
		public @value @value
		{ 
			get { return __value; }
			set { __value = value; __valueSpecified = true; RaisePropertyChanged("@value"); }
		}

		public RtState()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Duration",IsNullable=false),DataContract]
	public class Duration : Hafas.TimeType, INotifyPropertyChanged
	{

		public Duration() : base()
		{
		}
	}

	[XmlRoot(ElementName="Overview",IsNullable=false),DataContract]
	public class Overview : INotifyPropertyChanged
	{

		[XmlElement(ElementName="Date",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		public string __Date;
		
		[XmlIgnore]
		public string Date
		{ 
			get { return __Date; }
			set { __Date = value; RaisePropertyChanged("Date"); }
		}

		[XmlElement(Type=typeof(Hafas.Departure),ElementName="Departure",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Departure __Departure;
		
		[XmlIgnore]
		public Hafas.Departure Departure
		{
			get { if (__Departure == null) __Departure = new Hafas.Departure(); return __Departure; }
			set { __Departure = value; }
		}

		[XmlElement(Type=typeof(Hafas.Arrival),ElementName="Arrival",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Arrival __Arrival;
		
		[XmlIgnore]
		public Hafas.Arrival Arrival
		{
			get { if (__Arrival == null) __Arrival = new Hafas.Arrival(); return __Arrival; }
			set { __Arrival = value; }
		}

		[XmlElement(ElementName="Transfers",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		public string __Transfers;
		
		[XmlIgnore]
		public string Transfers
		{ 
			get { return __Transfers; }
			set { __Transfers = value; RaisePropertyChanged("Transfers"); }
		}

		[XmlElement(Type=typeof(Hafas.Duration),ElementName="Duration",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Duration __Duration;
		
		[XmlIgnore]
		public Hafas.Duration Duration
		{
			get { if (__Duration == null) __Duration = new Hafas.Duration(); return __Duration; }
			set { __Duration = value; }
		}

		[XmlElement(Type=typeof(Hafas.ServiceDays),ElementName="ServiceDays",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ServiceDays __ServiceDays;
		
		[XmlIgnore]
		public Hafas.ServiceDays ServiceDays
		{
			get { if (__ServiceDays == null) __ServiceDays = new Hafas.ServiceDays(); return __ServiceDays; }
			set { __ServiceDays = value; }
		}

		[XmlElement(Type=typeof(Hafas.Products),ElementName="Products",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Products __Products;
		
		[XmlIgnore]
		public Hafas.Products Products
		{
			get { if (__Products == null) __Products = new Hafas.Products(); return __Products; }
			set { __Products = value; }
		}

		[XmlElement(Type=typeof(Hafas.ContextURL),ElementName="ContextURL",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ContextURL __ContextURL;
		
		[XmlIgnore]
		public Hafas.ContextURL ContextURL
		{
			get { if (__ContextURL == null) __ContextURL = new Hafas.ContextURL(); return __ContextURL; }
			set { __ContextURL = value; }
		}

		[XmlElement(Type=typeof(Hafas.XMLHandle),ElementName="XMLHandle",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.XMLHandle __XMLHandle;
		
		[XmlIgnore]
		public Hafas.XMLHandle XMLHandle
		{
			get { if (__XMLHandle == null) __XMLHandle = new Hafas.XMLHandle(); return __XMLHandle; }
			set { __XMLHandle = value; }
		}

		[XmlElement(Type=typeof(Hafas.ECOResEnvironmentalImpact),ElementName="ECOResEnvironmentalImpact",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ECOResEnvironmentalImpact __ECOResEnvironmentalImpact;
		
		[XmlIgnore]
		public Hafas.ECOResEnvironmentalImpact ECOResEnvironmentalImpact
		{
			get { if (__ECOResEnvironmentalImpact == null) __ECOResEnvironmentalImpact = new Hafas.ECOResEnvironmentalImpact(); return __ECOResEnvironmentalImpact; }
			set { __ECOResEnvironmentalImpact = value; }
		}

		public Overview()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Products",IsNullable=false),DataContract]
	public class Products : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return Product.GetEnumerator();
		}

		public void Add(Hafas.Product obj)
		{
			Product.Add(obj);
		}

		[XmlIgnore]
		public Hafas.Product this[int index]
		{
			get { return (Hafas.Product) Product[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return Product.Count; }
        }

        public void Clear()
		{
			Product.Clear();
        }

		public Hafas.Product Remove(int index) 
		{ 
            Hafas.Product obj = Product[index];
            Product.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.Product obj)
		{
            return Product.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.Product),ElementName="Product",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Product> __Product;
		
		[XmlIgnore]
		public List<Hafas.Product> Product
		{
			get { if (__Product == null) __Product = new List<Hafas.Product>(); return __Product; }
			set { __Product = value; }
		}

		public Products()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Product",IsNullable=false),DataContract]
	public class Product : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="cat",DataType="string")]
		public string __cat;
		
		[XmlIgnore]
		public string cat
		{ 
			get { return __cat; }
			set { __cat = value; RaisePropertyChanged("cat"); }
		}

		public Product()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ContextURL",IsNullable=false),DataContract]
	public class ContextURL : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="url",DataType="anyURI")]
		public string __url;
		
		[XmlIgnore]
		public string url
		{ 
			get { return __url; }
			set { __url = value; RaisePropertyChanged("url"); }
		}

		public ContextURL()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="XMLHandle",IsNullable=false),DataContract]
	public class XMLHandle : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="url",DataType="anyURI")]
		public string __url;
		
		[XmlIgnore]
		public string url
		{ 
			get { return __url; }
			set { __url = value; RaisePropertyChanged("url"); }
		}

		public XMLHandle()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ConSectionList",IsNullable=false),DataContract]
	public class ConSectionList : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return ConSection.GetEnumerator();
		}

		public void Add(Hafas.ConSection obj)
		{
			ConSection.Add(obj);
		}

		[XmlIgnore]
		public Hafas.ConSection this[int index]
		{
			get { return (Hafas.ConSection) ConSection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return ConSection.Count; }
        }

        public void Clear()
		{
			ConSection.Clear();
        }

		public Hafas.ConSection Remove(int index) 
		{ 
            Hafas.ConSection obj = ConSection[index];
            ConSection.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.ConSection obj)
		{
            return ConSection.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.ConSection),ElementName="ConSection",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.ConSection> __ConSection;
		
		[XmlIgnore]
		public List<Hafas.ConSection> ConSection
		{
			get { if (__ConSection == null) __ConSection = new List<Hafas.ConSection>(); return __ConSection; }
			set { __ConSection = value; }
		}

		public ConSectionList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ConSection",IsNullable=false),DataContract]
	public class ConSection : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.Departure),ElementName="Departure",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Departure __Departure;
		
		[XmlIgnore]
		public Hafas.Departure Departure
		{
			get { if (__Departure == null) __Departure = new Hafas.Departure(); return __Departure; }
			set { __Departure = value; }
		}

		[XmlElement(Type=typeof(Hafas.Journey),ElementName="Journey",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Journey __Journey;
		
		[XmlIgnore]
		public Hafas.Journey Journey
		{
			get { if (__Journey == null) __Journey = new Hafas.Journey(); return __Journey; }
			set { __Journey = value; }
		}

		[XmlElement(Type=typeof(Hafas.Walk),ElementName="Walk",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Walk __Walk;
		
		[XmlIgnore]
		public Hafas.Walk Walk
		{
			get { if (__Walk == null) __Walk = new Hafas.Walk(); return __Walk; }
			set { __Walk = value; }
		}

		[XmlElement(Type=typeof(Hafas.Transfer),ElementName="Transfer",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Transfer __Transfer;
		
		[XmlIgnore]
		public Hafas.Transfer Transfer
		{
			get { if (__Transfer == null) __Transfer = new Hafas.Transfer(); return __Transfer; }
			set { __Transfer = value; }
		}

		[XmlElement(Type=typeof(Hafas.GisRoute),ElementName="GisRoute",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.GisRoute __GisRoute;
		
		[XmlIgnore]
		public Hafas.GisRoute GisRoute
		{
			get { if (__GisRoute == null) __GisRoute = new Hafas.GisRoute(); return __GisRoute; }
			set { __GisRoute = value; }
		}

		[XmlElement(Type=typeof(Hafas.Polyline),ElementName="Polyline",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Polyline __Polyline;
		
		[XmlIgnore]
		public Hafas.Polyline Polyline
		{
			get { if (__Polyline == null) __Polyline = new Hafas.Polyline(); return __Polyline; }
			set { __Polyline = value; }
		}

		[XmlElement(Type=typeof(Hafas.Arrival),ElementName="Arrival",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Arrival __Arrival;
		
		[XmlIgnore]
		public Hafas.Arrival Arrival
		{
			get { if (__Arrival == null) __Arrival = new Hafas.Arrival(); return __Arrival; }
			set { __Arrival = value; }
		}

		public ConSection()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Departure",IsNullable=false),DataContract]
	public class Departure : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.BasicStop),ElementName="BasicStop",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.BasicStop __BasicStop;
		
		[XmlIgnore]
		public Hafas.BasicStop BasicStop
		{
			get { if (__BasicStop == null) __BasicStop = new Hafas.BasicStop(); return __BasicStop; }
			set { __BasicStop = value; }
		}

		public Departure()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Arrival",IsNullable=false),DataContract]
	public class Arrival : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.BasicStop),ElementName="BasicStop",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.BasicStop __BasicStop;
		
		[XmlIgnore]
		public Hafas.BasicStop BasicStop
		{
			get { if (__BasicStop == null) __BasicStop = new Hafas.BasicStop(); return __BasicStop; }
			set { __BasicStop = value; }
		}

		public Arrival()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="BasicStop",IsNullable=false),DataContract]
	public class BasicStop : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="type")]
		public type2345678 __type;
		
		[XmlIgnore]
		public bool __typeSpecified;
		
		[XmlIgnore]
		public type2345678 type
		{ 
			get { return __type; }
			set { __type = value; __typeSpecified = true; RaisePropertyChanged("type"); }
		}

		[XmlAttribute(AttributeName="index")]
		public string __index;
		
		[XmlIgnore]
		public string index
		{ 
			get { return __index; }
			set { __index = value; RaisePropertyChanged("index"); }
		}

		[XmlElement(Type=typeof(Hafas.StAttrList),ElementName="StAttrList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.StAttrList __StAttrList;
		
		[XmlIgnore]
		public Hafas.StAttrList StAttrList
		{
			get { if (__StAttrList == null) __StAttrList = new Hafas.StAttrList(); return __StAttrList; }
			set { __StAttrList = value; }
		}

		[XmlElement(Type=typeof(Hafas.Address),ElementName="Address",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Address __Address;
		
		[XmlIgnore]
		public Hafas.Address Address
		{
			get { if (__Address == null) __Address = new Hafas.Address(); return __Address; }
			set { __Address = value; }
		}

		[XmlElement(Type=typeof(Hafas.Poi),ElementName="Poi",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Poi __Poi;
		
		[XmlIgnore]
		public Hafas.Poi Poi
		{
			get { if (__Poi == null) __Poi = new Hafas.Poi(); return __Poi; }
			set { __Poi = value; }
		}

		[XmlElement(Type=typeof(Hafas.Station),ElementName="Station",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Station __Station;
		
		[XmlIgnore]
		public Hafas.Station Station
		{
			get { if (__Station == null) __Station = new Hafas.Station(); return __Station; }
			set { __Station = value; }
		}

		[XmlElement(Type=typeof(Hafas.Arr),ElementName="Arr",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Arr __Arr;
		
		[XmlIgnore]
		public Hafas.Arr Arr
		{
			get { if (__Arr == null) __Arr = new Hafas.Arr(); return __Arr; }
			set { __Arr = value; }
		}

		[XmlElement(Type=typeof(Hafas.Dep),ElementName="Dep",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Dep __Dep;
		
		[XmlIgnore]
		public Hafas.Dep Dep
		{
			get { if (__Dep == null) __Dep = new Hafas.Dep(); return __Dep; }
			set { __Dep = value; }
		}

		[XmlElement(Type=typeof(StopPrognosis),ElementName="StopPrognosis",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public StopPrognosis __StopPrognosis;
		
		[XmlIgnore]
		public StopPrognosis StopPrognosis
		{
			get { if (__StopPrognosis == null) __StopPrognosis = new StopPrognosis(); return __StopPrognosis; }
			set { __StopPrognosis = value; }
		}

		public BasicStop()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="StopPrognosis"),DataContract]
	public class StopPrognosis : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.Arr),ElementName="Arr",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Arr __Arr;
		
		[XmlIgnore]
		public Hafas.Arr Arr
		{
			get { if (__Arr == null) __Arr = new Hafas.Arr(); return __Arr; }
			set { __Arr = value; }
		}

		[XmlElement(Type=typeof(Hafas.Dep),ElementName="Dep",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Dep __Dep;
		
		[XmlIgnore]
		public Hafas.Dep Dep
		{
			get { if (__Dep == null) __Dep = new Hafas.Dep(); return __Dep; }
			set { __Dep = value; }
		}

		[XmlElement(ElementName="Status",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __Status;
		
		[XmlIgnore]
		public string Status
		{ 
			get { return __Status; }
			set { __Status = value; RaisePropertyChanged("Status"); }
		}

		[XmlElement(Type=typeof(FreeTextL),ElementName="FreeTextL",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public FreeTextL __FreeTextL;
		
		[XmlIgnore]
		public FreeTextL FreeTextL
		{
			get { if (__FreeTextL == null) __FreeTextL = new FreeTextL(); return __FreeTextL; }
			set { __FreeTextL = value; }
		}

		[XmlElement(ElementName="Capacity1st",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Capacity1st __Capacity1st;
		
		[XmlIgnore]
		public bool __Capacity1stSpecified;
		
		[XmlIgnore]
		public Capacity1st Capacity1st
		{ 
			get { return __Capacity1st; }
			set { __Capacity1st = value; __Capacity1stSpecified = true; RaisePropertyChanged("Capacity1st"); }
		}

		[XmlElement(ElementName="Capacity2nd",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Capacity2nd __Capacity2nd;
		
		[XmlIgnore]
		public bool __Capacity2ndSpecified;
		
		[XmlIgnore]
		public Capacity2nd Capacity2nd
		{ 
			get { return __Capacity2nd; }
			set { __Capacity2nd = value; __Capacity2ndSpecified = true; RaisePropertyChanged("Capacity2nd"); }
		}

		public StopPrognosis()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="FreeTextL"),DataContract]
	public class FreeTextL : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Freetext),ElementName="Freetext",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Freetext __Freetext;
		
		[XmlIgnore]
		public Freetext Freetext
		{
			get { if (__Freetext == null) __Freetext = new Freetext(); return __Freetext; }
			set { __Freetext = value; }
		}

		public FreeTextL()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="Freetext"),DataContract]
	public class Freetext : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="validFor")]
		public string __validFor;
		
		[XmlIgnore]
		public string validFor
		{ 
			get { return __validFor; }
			set { __validFor = value; RaisePropertyChanged("validFor"); }
		}

		[XmlElement(Type=typeof(Hafas.Text),ElementName="Text",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Text __Text;
		
		[XmlIgnore]
		public Hafas.Text Text
		{
			get { if (__Text == null) __Text = new Hafas.Text(); return __Text; }
			set { __Text = value; }
		}

		[XmlElement(ElementName="Code",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __Code;
		
		[XmlIgnore]
		public string Code
		{ 
			get { return __Code; }
			set { __Code = value; RaisePropertyChanged("Code"); }
		}

		public Freetext()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="StAttrList",IsNullable=false),DataContract]
	public class StAttrList : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return StAttr.GetEnumerator();
		}

		public void Add(Hafas.StAttr obj)
		{
			StAttr.Add(obj);
		}

		[XmlIgnore]
		public Hafas.StAttr this[int index]
		{
			get { return (Hafas.StAttr) StAttr[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return StAttr.Count; }
        }

        public void Clear()
		{
			StAttr.Clear();
        }

		public Hafas.StAttr Remove(int index) 
		{ 
            Hafas.StAttr obj = StAttr[index];
            StAttr.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.StAttr obj)
		{
            return StAttr.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.StAttr),ElementName="StAttr",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.StAttr> __StAttr;
		
		[XmlIgnore]
		public List<Hafas.StAttr> StAttr
		{
			get { if (__StAttr == null) __StAttr = new List<Hafas.StAttr>(); return __StAttr; }
			set { __StAttr = value; }
		}

		public StAttrList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="StAttr",IsNullable=false),DataContract]
	public class StAttr : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="code",DataType="token")]
		public string __code;
		
		[XmlIgnore]
		public string code
		{ 
			get { return __code; }
			set { __code = value; RaisePropertyChanged("code"); }
		}

		[XmlAttribute(AttributeName="text",DataType="string")]
		public string __text;
		
		[XmlIgnore]
		public string text
		{ 
			get { return __text; }
			set { __text = value; RaisePropertyChanged("text"); }
		}

		[XmlAttribute(AttributeName="priority",DataType="integer")]
		public string __priority;
		
		[XmlIgnore]
		public string priority
		{ 
			get { return __priority; }
			set { __priority = value; RaisePropertyChanged("priority"); }
		}

		[XmlAttribute(AttributeName="type")]
		public type23456789 __type;
		
		[XmlIgnore]
		public bool __typeSpecified;
		
		[XmlIgnore]
		public type23456789 type
		{ 
			get { return __type; }
			set { __type = value; __typeSpecified = true; RaisePropertyChanged("type"); }
		}

		[XmlText(DataType="string")]
		public string __Value;
		
		[XmlIgnore]
		public string Value
		{ 
			get { return __Value; }
			set { __Value = value; RaisePropertyChanged("Value"); }
		}

		public StAttr()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Platform",IsNullable=false),DataContract]
	public class Platform : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return Text.GetEnumerator();
		}

		public void Add(Hafas.Text obj)
		{
			Text.Add(obj);
		}

		[XmlIgnore]
		public Hafas.Text this[int index]
		{
			get { return (Hafas.Text) Text[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return Text.Count; }
        }

        public void Clear()
		{
			Text.Clear();
        }

		public Hafas.Text Remove(int index) 
		{ 
            Hafas.Text obj = Text[index];
            Text.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.Text obj)
		{
            return Text.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.Text),ElementName="Text",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Text> __Text;
		
		[XmlIgnore]
		public List<Hafas.Text> Text
		{
			get { if (__Text == null) __Text = new List<Hafas.Text>(); return __Text; }
			set { __Text = value; }
		}

		public Platform()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Dep",IsNullable=false),DataContract]
	public class Dep : Hafas.ArrDepType, INotifyPropertyChanged
	{

		public Dep() : base()
		{
		}
	}

	[XmlRoot(ElementName="Arr",IsNullable=false),DataContract]
	public class Arr : Hafas.ArrDepType, INotifyPropertyChanged
	{

		public Arr() : base()
		{
		}
	}

	[XmlRoot(ElementName="Journey",IsNullable=false),DataContract]
	public class Journey : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.JHandle),ElementName="JHandle",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JHandle __JHandle;
		
		[XmlIgnore]
		public Hafas.JHandle JHandle
		{
			get { if (__JHandle == null) __JHandle = new Hafas.JHandle(); return __JHandle; }
			set { __JHandle = value; }
		}

		[XmlElement(Type=typeof(Hafas.JourneyAttributeList),ElementName="JourneyAttributeList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JourneyAttributeList __JourneyAttributeList;
		
		[XmlIgnore]
		public Hafas.JourneyAttributeList JourneyAttributeList
		{
			get { if (__JourneyAttributeList == null) __JourneyAttributeList = new Hafas.JourneyAttributeList(); return __JourneyAttributeList; }
			set { __JourneyAttributeList = value; }
		}

		[XmlElement(Type=typeof(Hafas.PassList),ElementName="PassList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.PassList __PassList;
		
		[XmlIgnore]
		public Hafas.PassList PassList
		{
			get { if (__PassList == null) __PassList = new Hafas.PassList(); return __PassList; }
			set { __PassList = value; }
		}

		[XmlElement(Type=typeof(Hafas.JProg),ElementName="JProg",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JProg __JProg;
		
		[XmlIgnore]
		public Hafas.JProg JProg
		{
			get { if (__JProg == null) __JProg = new Hafas.JProg(); return __JProg; }
			set { __JProg = value; }
		}

		public Journey()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="JourneyAttributeList",IsNullable=false),DataContract]
	public class JourneyAttributeList : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return JourneyAttribute.GetEnumerator();
		}

		public void Add(Hafas.JourneyAttribute obj)
		{
			JourneyAttribute.Add(obj);
		}

		[XmlIgnore]
		public Hafas.JourneyAttribute this[int index]
		{
			get { return (Hafas.JourneyAttribute) JourneyAttribute[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return JourneyAttribute.Count; }
        }

        public void Clear()
		{
			JourneyAttribute.Clear();
        }

		public Hafas.JourneyAttribute Remove(int index) 
		{ 
            Hafas.JourneyAttribute obj = JourneyAttribute[index];
            JourneyAttribute.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.JourneyAttribute obj)
		{
            return JourneyAttribute.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.JourneyAttribute),ElementName="JourneyAttribute",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.JourneyAttribute> __JourneyAttribute;
		
		[XmlIgnore]
		public List<Hafas.JourneyAttribute> JourneyAttribute
		{
			get { if (__JourneyAttribute == null) __JourneyAttribute = new List<Hafas.JourneyAttribute>(); return __JourneyAttribute; }
			set { __JourneyAttribute = value; }
		}

		public JourneyAttributeList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="JourneyAttribute",IsNullable=false),DataContract]
	public class JourneyAttribute : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="from",DataType="integer")]
		public string __from;
		
		[XmlIgnore]
		public string from
		{ 
			get { return __from; }
			set { __from = value; RaisePropertyChanged("from"); }
		}

		[XmlAttribute(AttributeName="to",DataType="integer")]
		public string __to;
		
		[XmlIgnore]
		public string to
		{ 
			get { return __to; }
			set { __to = value; RaisePropertyChanged("to"); }
		}

		[XmlElement(Type=typeof(Hafas.Attribute),ElementName="Attribute",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Attribute __Attribute;
		
		[XmlIgnore]
		public Hafas.Attribute Attribute
		{
			get { if (__Attribute == null) __Attribute = new Hafas.Attribute(); return __Attribute; }
			set { __Attribute = value; }
		}

		[XmlElement(Type=typeof(Hafas.ServiceDays),ElementName="ServiceDays",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ServiceDays __ServiceDays;
		
		[XmlIgnore]
		public Hafas.ServiceDays ServiceDays
		{
			get { if (__ServiceDays == null) __ServiceDays = new Hafas.ServiceDays(); return __ServiceDays; }
			set { __ServiceDays = value; }
		}

		public JourneyAttribute()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Walk",IsNullable=false),DataContract]
	public class Walk : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="length",DataType="integer")]
		public string __length;
		
		[XmlIgnore]
		public string length
		{ 
			get { return __length; }
			set { __length = value; RaisePropertyChanged("length"); }
		}

		[XmlElement(Type=typeof(Hafas.Duration),ElementName="Duration",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Duration __Duration;
		
		[XmlIgnore]
		public Hafas.Duration Duration
		{
			get { if (__Duration == null) __Duration = new Hafas.Duration(); return __Duration; }
			set { __Duration = value; }
		}

		[XmlElement(Type=typeof(Hafas.JourneyAttributeList),ElementName="JourneyAttributeList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JourneyAttributeList __JourneyAttributeList;
		
		[XmlIgnore]
		public Hafas.JourneyAttributeList JourneyAttributeList
		{
			get { if (__JourneyAttributeList == null) __JourneyAttributeList = new Hafas.JourneyAttributeList(); return __JourneyAttributeList; }
			set { __JourneyAttributeList = value; }
		}

		public Walk()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Transfer",IsNullable=false),DataContract]
	public class Transfer : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.Duration),ElementName="Duration",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Duration __Duration;
		
		[XmlIgnore]
		public Hafas.Duration Duration
		{
			get { if (__Duration == null) __Duration = new Hafas.Duration(); return __Duration; }
			set { __Duration = value; }
		}

		[XmlElement(Type=typeof(Hafas.JourneyAttributeList),ElementName="JourneyAttributeList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JourneyAttributeList __JourneyAttributeList;
		
		[XmlIgnore]
		public Hafas.JourneyAttributeList JourneyAttributeList
		{
			get { if (__JourneyAttributeList == null) __JourneyAttributeList = new Hafas.JourneyAttributeList(); return __JourneyAttributeList; }
			set { __JourneyAttributeList = value; }
		}

		public Transfer()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="GisRoute",IsNullable=false),DataContract]
	public class GisRoute : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="type")]
		public string __type;
		
		[XmlIgnore]
		public string type
		{ 
			get { return __type; }
			set { __type = value; RaisePropertyChanged("type"); }
		}

		[XmlElement(Type=typeof(Hafas.Duration),ElementName="Duration",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Duration __Duration;
		
		[XmlIgnore]
		public Hafas.Duration Duration
		{
			get { if (__Duration == null) __Duration = new Hafas.Duration(); return __Duration; }
			set { __Duration = value; }
		}

		[XmlElement(ElementName="Distance",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __Distance;
		
		[XmlIgnore]
		public string Distance
		{ 
			get { return __Distance; }
			set { __Distance = value; RaisePropertyChanged("Distance"); }
		}

		[XmlElement(Type=typeof(Hafas.JourneyAttributeList),ElementName="JourneyAttributeList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JourneyAttributeList __JourneyAttributeList;
		
		[XmlIgnore]
		public Hafas.JourneyAttributeList JourneyAttributeList
		{
			get { if (__JourneyAttributeList == null) __JourneyAttributeList = new Hafas.JourneyAttributeList(); return __JourneyAttributeList; }
			set { __JourneyAttributeList = value; }
		}

		public GisRoute()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="PassList",IsNullable=false),DataContract]
	public class PassList : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return BasicStop.GetEnumerator();
		}

		public void Add(Hafas.BasicStop obj)
		{
			BasicStop.Add(obj);
		}

		[XmlIgnore]
		public Hafas.BasicStop this[int index]
		{
			get { return (Hafas.BasicStop) BasicStop[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return BasicStop.Count; }
        }

        public void Clear()
		{
			BasicStop.Clear();
        }

		public Hafas.BasicStop Remove(int index) 
		{ 
            Hafas.BasicStop obj = BasicStop[index];
            BasicStop.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.BasicStop obj)
		{
            return BasicStop.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.BasicStop),ElementName="BasicStop",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.BasicStop> __BasicStop;
		
		[XmlIgnore]
		public List<Hafas.BasicStop> BasicStop
		{
			get { if (__BasicStop == null) __BasicStop = new List<Hafas.BasicStop>(); return __BasicStop; }
			set { __BasicStop = value; }
		}

		public PassList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="CommentList",IsNullable=false),DataContract]
	public class CommentList : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return Comment.GetEnumerator();
		}

		public void Add(Hafas.Comment obj)
		{
			Comment.Add(obj);
		}

		[XmlIgnore]
		public Hafas.Comment this[int index]
		{
			get { return (Hafas.Comment) Comment[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return Comment.Count; }
        }

        public void Clear()
		{
			Comment.Clear();
        }

		public Hafas.Comment Remove(int index) 
		{ 
            Hafas.Comment obj = Comment[index];
            Comment.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.Comment obj)
		{
            return Comment.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.Comment),ElementName="Comment",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Comment> __Comment;
		
		[XmlIgnore]
		public List<Hafas.Comment> Comment
		{
			get { if (__Comment == null) __Comment = new List<Hafas.Comment>(); return __Comment; }
			set { __Comment = value; }
		}

		public CommentList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Comment",IsNullable=false),DataContract]
	public class Comment : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return Text.GetEnumerator();
		}

		public void Add(Hafas.Text obj)
		{
			Text.Add(obj);
		}

		[XmlIgnore]
		public Hafas.Text this[int index]
		{
			get { return (Hafas.Text) Text[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return Text.Count; }
        }

        public void Clear()
		{
			Text.Clear();
        }

		public Hafas.Text Remove(int index) 
		{ 
            Hafas.Text obj = Text[index];
            Text.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.Text obj)
		{
            return Text.Remove(obj);
        }

		[XmlAttribute(AttributeName="id",DataType="ID")]
		public string __id;
		
		[XmlIgnore]
		public string id
		{ 
			get { return __id; }
			set { __id = value; RaisePropertyChanged("id"); }
		}

		[XmlElement(Type=typeof(Hafas.Text),ElementName="Text",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Text> __Text;
		
		[XmlIgnore]
		public List<Hafas.Text> Text
		{
			get { if (__Text == null) __Text = new List<Hafas.Text>(); return __Text; }
			set { __Text = value; }
		}

		public Comment()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="AltConList",IsNullable=false),DataContract]
	public class AltConList : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return id.GetEnumerator();
		}

		public void Add(string obj)
		{
			id.Add(obj);
		}

		[XmlIgnore]
		public string this[int index]
		{
			get { return (string) id[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return id.Count; }
        }

        public void Clear()
		{
			id.Clear();
        }

		public string Remove(int index) 
		{ 
            string obj = id[index];
            id.Remove(obj);
			return obj;
        }

        public bool Remove(string obj)
		{
            return id.Remove(obj);
        }

		[XmlElement(Type=typeof(string),ElementName="id",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="ID")]
		public List<string> __id;
		
		[XmlIgnore]
		public List<string> id
		{
			get { if (__id == null) __id = new List<string>(); return __id; }
			set { __id = value; }
		}

		public AltConList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Polyline",IsNullable=false),DataContract]
	public class Polyline : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return Point.GetEnumerator();
		}

		public void Add(Hafas.Point obj)
		{
			Point.Add(obj);
		}

		[XmlIgnore]
		public Hafas.Point this[int index]
		{
			get { return (Hafas.Point) Point[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return Point.Count; }
        }

        public void Clear()
		{
			Point.Clear();
        }

		public Hafas.Point Remove(int index) 
		{ 
            Hafas.Point obj = Point[index];
            Point.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.Point obj)
		{
            return Point.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.Point),ElementName="Point",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Point> __Point;
		
		[XmlIgnore]
		public List<Hafas.Point> Point
		{
			get { if (__Point == null) __Point = new List<Hafas.Point>(); return __Point; }
			set { __Point = value; }
		}

		public Polyline()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Point",IsNullable=false),DataContract]
	public class Point : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="x")]
		public string __x;
		
		[XmlIgnore]
		public string x
		{ 
			get { return __x; }
			set { __x = value; RaisePropertyChanged("x"); }
		}

		[XmlAttribute(AttributeName="y")]
		public string __y;
		
		[XmlIgnore]
		public string y
		{ 
			get { return __y; }
			set { __y = value; RaisePropertyChanged("y"); }
		}

		public Point()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ConIntervalReq",IsNullable=false),DataContract]
	public class ConIntervalReq : Hafas.ConBasicReq, INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.ReqIT),ElementName="ReqIT",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ReqIT __ReqIT;
		
		[XmlIgnore]
		public Hafas.ReqIT ReqIT
		{
			get { if (__ReqIT == null) __ReqIT = new Hafas.ReqIT(); return __ReqIT; }
			set { __ReqIT = value; }
		}

		[XmlElement(Type=typeof(Hafas.RIFlags),ElementName="RIFlags",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.RIFlags __RIFlags;
		
		[XmlIgnore]
		public Hafas.RIFlags RIFlags
		{
			get { if (__RIFlags == null) __RIFlags = new Hafas.RIFlags(); return __RIFlags; }
			set { __RIFlags = value; }
		}

		public ConIntervalReq() : base()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="STBReq",IsNullable=false),DataContract]
	public class STBReq : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="boardType")]
		public boardType __boardType;
		
		[XmlIgnore]
		public bool __boardTypeSpecified;
		
		[XmlIgnore]
		public boardType boardType
		{ 
			get { return __boardType; }
			set { __boardType = value; __boardTypeSpecified = true; RaisePropertyChanged("boardType"); }
		}

		[XmlAttribute(AttributeName="maxStops",DataType="int")]
		public int __maxStops;
		
		[XmlIgnore]
		public bool __maxStopsSpecified;
		
		[XmlIgnore]
		public int maxStops
		{ 
			get { return __maxStops; }
			set { __maxStops = value; __maxStopsSpecified = true; RaisePropertyChanged("maxStops"); }
		}

		[XmlElement(Type=typeof(Hafas.@Time),ElementName="Time",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.@Time __Time;
		
		[XmlIgnore]
		public Hafas.@Time @Time
		{
			get { if (__Time == null) __Time = new Hafas.@Time(); return __Time; }
			set { __Time = value; }
		}

		[XmlElement(Type=typeof(Hafas.Period),ElementName="Period",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Period __Period;
		
		[XmlIgnore]
		public Hafas.Period Period
		{
			get { if (__Period == null) __Period = new Hafas.Period(); return __Period; }
			set { __Period = value; }
		}

		[XmlElement(ElementName="Today",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __Today;
		
		[XmlIgnore]
		public string Today
		{ 
			get { return __Today; }
			set { __Today = value; RaisePropertyChanged("Today"); }
		}

		[XmlElement(Type=typeof(Hafas.TableStation),ElementName="TableStation",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.TableStation __TableStation;
		
		[XmlIgnore]
		public Hafas.TableStation TableStation
		{
			get { if (__TableStation == null) __TableStation = new Hafas.TableStation(); return __TableStation; }
			set { __TableStation = value; }
		}

		[XmlElement(Type=typeof(Hafas.DirectionFilter),ElementName="DirectionFilter",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.DirectionFilter __DirectionFilter;
		
		[XmlIgnore]
		public Hafas.DirectionFilter DirectionFilter
		{
			get { if (__DirectionFilter == null) __DirectionFilter = new Hafas.DirectionFilter(); return __DirectionFilter; }
			set { __DirectionFilter = value; }
		}

		[XmlElement(ElementName="TrainFilter",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __TrainFilter;
		
		[XmlIgnore]
		public string TrainFilter
		{ 
			get { return __TrainFilter; }
			set { __TrainFilter = value; RaisePropertyChanged("TrainFilter"); }
		}

		[XmlElement(ElementName="ProductFilter",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __ProductFilter;
		
		[XmlIgnore]
		public string ProductFilter
		{ 
			get { return __ProductFilter; }
			set { __ProductFilter = value; RaisePropertyChanged("ProductFilter"); }
		}

		public STBReq()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Period",IsNullable=false),DataContract]
	public class Period : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(DateBegin),ElementName="DateBegin",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public DateBegin __DateBegin;
		
		[XmlIgnore]
		public DateBegin DateBegin
		{
			get { if (__DateBegin == null) __DateBegin = new DateBegin(); return __DateBegin; }
			set { __DateBegin = value; }
		}

		[XmlElement(Type=typeof(DateEnd),ElementName="DateEnd",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public DateEnd __DateEnd;
		
		[XmlIgnore]
		public DateEnd DateEnd
		{
			get { if (__DateEnd == null) __DateEnd = new DateEnd(); return __DateEnd; }
			set { __DateEnd = value; }
		}

		public Period()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="DateBegin"),DataContract]
	public class DateBegin : INotifyPropertyChanged
	{

		[XmlElement(ElementName="Date",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		public string __Date;
		
		[XmlIgnore]
		public string Date
		{ 
			get { return __Date; }
			set { __Date = value; RaisePropertyChanged("Date"); }
		}

		public DateBegin()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="DateEnd"),DataContract]
	public class DateEnd : INotifyPropertyChanged
	{

		[XmlElement(ElementName="Date",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		public string __Date;
		
		[XmlIgnore]
		public string Date
		{ 
			get { return __Date; }
			set { __Date = value; RaisePropertyChanged("Date"); }
		}

		public DateEnd()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="TableStation",IsNullable=false),DataContract]
	public class TableStation : Hafas.StationType, INotifyPropertyChanged
	{

		public TableStation() : base()
		{
		}
	}

	[XmlRoot(ElementName="DirectionFilter",IsNullable=false),DataContract]
	public class DirectionFilter : Hafas.StationType, INotifyPropertyChanged
	{

		public DirectionFilter() : base()
		{
		}
	}

	[XmlRoot(ElementName="STBRes",IsNullable=false),DataContract]
	public class STBRes : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.Err),ElementName="Err",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Err __Err;
		
		[XmlIgnore]
		public Hafas.Err Err
		{
			get { if (__Err == null) __Err = new Hafas.Err(); return __Err; }
			set { __Err = value; }
		}

		[XmlElement(Type=typeof(Hafas.JourneyList),ElementName="JourneyList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JourneyList __JourneyList;
		
		[XmlIgnore]
		public Hafas.JourneyList JourneyList
		{
			get { if (__JourneyList == null) __JourneyList = new Hafas.JourneyList(); return __JourneyList; }
			set { __JourneyList = value; }
		}

		[XmlElement(Type=typeof(Hafas.IList),ElementName="IList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.IList __IList;
		
		[XmlIgnore]
		public Hafas.IList IList
		{
			get { if (__IList == null) __IList = new Hafas.IList(); return __IList; }
			set { __IList = value; }
		}

		public STBRes()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="JourneyList",IsNullable=false),DataContract]
	public class JourneyList : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return STBJourney.GetEnumerator();
		}

		public void Add(Hafas.STBJourney obj)
		{
			STBJourney.Add(obj);
		}

		[XmlIgnore]
		public Hafas.STBJourney this[int index]
		{
			get { return (Hafas.STBJourney) STBJourney[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return STBJourney.Count; }
        }

        public void Clear()
		{
			STBJourney.Clear();
        }

		public Hafas.STBJourney Remove(int index) 
		{ 
            Hafas.STBJourney obj = STBJourney[index];
            STBJourney.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.STBJourney obj)
		{
            return STBJourney.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.STBJourney),ElementName="STBJourney",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.STBJourney> __STBJourney;
		
		[XmlIgnore]
		public List<Hafas.STBJourney> STBJourney
		{
			get { if (__STBJourney == null) __STBJourney = new List<Hafas.STBJourney>(); return __STBJourney; }
			set { __STBJourney = value; }
		}

		public JourneyList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="STBJourney",IsNullable=false),DataContract]
	public class STBJourney : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.JHandle),ElementName="JHandle",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JHandle __JHandle;
		
		[XmlIgnore]
		public Hafas.JHandle JHandle
		{
			get { if (__JHandle == null) __JHandle = new Hafas.JHandle(); return __JHandle; }
			set { __JHandle = value; }
		}

		[XmlElement(Type=typeof(Hafas.MainStop),ElementName="MainStop",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.MainStop __MainStop;
		
		[XmlIgnore]
		public Hafas.MainStop MainStop
		{
			get { if (__MainStop == null) __MainStop = new Hafas.MainStop(); return __MainStop; }
			set { __MainStop = value; }
		}

		[XmlElement(Type=typeof(Hafas.JourneyAttributeList),ElementName="JourneyAttributeList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JourneyAttributeList __JourneyAttributeList;
		
		[XmlIgnore]
		public Hafas.JourneyAttributeList JourneyAttributeList
		{
			get { if (__JourneyAttributeList == null) __JourneyAttributeList = new Hafas.JourneyAttributeList(); return __JourneyAttributeList; }
			set { __JourneyAttributeList = value; }
		}

		[XmlElement(Type=typeof(Hafas.PassList),ElementName="PassList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.PassList __PassList;
		
		[XmlIgnore]
		public Hafas.PassList PassList
		{
			get { if (__PassList == null) __PassList = new Hafas.PassList(); return __PassList; }
			set { __PassList = value; }
		}

		[XmlElement(Type=typeof(ServiceDaysList),ElementName="ServiceDaysList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public ServiceDaysList __ServiceDaysList;
		
		[XmlIgnore]
		public ServiceDaysList ServiceDaysList
		{
			get { if (__ServiceDaysList == null) __ServiceDaysList = new ServiceDaysList(); return __ServiceDaysList; }
			set { __ServiceDaysList = value; }
		}

		[XmlElement(Type=typeof(Hafas.IList),ElementName="IList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.IList __IList;
		
		[XmlIgnore]
		public Hafas.IList IList
		{
			get { if (__IList == null) __IList = new Hafas.IList(); return __IList; }
			set { __IList = value; }
		}

		[XmlElement(Type=typeof(Hafas.JProg),ElementName="JProg",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JProg __JProg;
		
		[XmlIgnore]
		public Hafas.JProg JProg
		{
			get { if (__JProg == null) __JProg = new Hafas.JProg(); return __JProg; }
			set { __JProg = value; }
		}

		public STBJourney()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="ServiceDaysList"),DataContract]
	public class ServiceDaysList : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return ServiceDays.GetEnumerator();
		}

		public void Add(Hafas.ServiceDays obj)
		{
			ServiceDays.Add(obj);
		}

		[XmlIgnore]
		public Hafas.ServiceDays this[int index]
		{
			get { return (Hafas.ServiceDays) ServiceDays[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return ServiceDays.Count; }
        }

        public void Clear()
		{
			ServiceDays.Clear();
        }

		public Hafas.ServiceDays Remove(int index) 
		{ 
            Hafas.ServiceDays obj = ServiceDays[index];
            ServiceDays.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.ServiceDays obj)
		{
            return ServiceDays.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.ServiceDays),ElementName="ServiceDays",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.ServiceDays> __ServiceDays;
		
		[XmlIgnore]
		public List<Hafas.ServiceDays> ServiceDays
		{
			get { if (__ServiceDays == null) __ServiceDays = new List<Hafas.ServiceDays>(); return __ServiceDays; }
			set { __ServiceDays = value; }
		}

		public ServiceDaysList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="MainStop",IsNullable=false),DataContract]
	public class MainStop : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.BasicStop),ElementName="BasicStop",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.BasicStop __BasicStop;
		
		[XmlIgnore]
		public Hafas.BasicStop BasicStop
		{
			get { if (__BasicStop == null) __BasicStop = new Hafas.BasicStop(); return __BasicStop; }
			set { __BasicStop = value; }
		}

		public MainStop()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="IList",IsNullable=false),DataContract]
	public class IList : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return I.GetEnumerator();
		}

		public void Add(Hafas.I obj)
		{
			I.Add(obj);
		}

		[XmlIgnore]
		public Hafas.I this[int index]
		{
			get { return (Hafas.I) I[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return I.Count; }
        }

        public void Clear()
		{
			I.Clear();
        }

		public Hafas.I Remove(int index) 
		{ 
            Hafas.I obj = I[index];
            I.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.I obj)
		{
            return I.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.I),ElementName="I",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.I> __I;
		
		[XmlIgnore]
		public List<Hafas.I> I
		{
			get { if (__I == null) __I = new List<Hafas.I>(); return __I; }
			set { __I = value; }
		}

		public IList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="I",IsNullable=false),DataContract]
	public class I : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="header",DataType="string")]
		public string __header;
		
		[XmlIgnore]
		public string header
		{ 
			get { return __header; }
			set { __header = value; RaisePropertyChanged("header"); }
		}

		[XmlAttribute(AttributeName="lead",DataType="string")]
		public string __lead;
		
		[XmlIgnore]
		public string lead
		{ 
			get { return __lead; }
			set { __lead = value; RaisePropertyChanged("lead"); }
		}

		[XmlAttribute(AttributeName="text",DataType="string")]
		public string __text;
		
		[XmlIgnore]
		public string text
		{ 
			get { return __text; }
			set { __text = value; RaisePropertyChanged("text"); }
		}

		[XmlAttribute(AttributeName="uriCustom",DataType="string")]
		public string __uriCustom;
		
		[XmlIgnore]
		public string uriCustom
		{ 
			get { return __uriCustom; }
			set { __uriCustom = value; RaisePropertyChanged("uriCustom"); }
		}

		[XmlAttribute(AttributeName="type",DataType="integer")]
		public string __type;
		
		[XmlIgnore]
		public string type
		{ 
			get { return __type; }
			set { __type = value; RaisePropertyChanged("type"); }
		}

		[XmlAttribute(AttributeName="symbol",DataType="string")]
		public string __symbol;
		
		[XmlIgnore]
		public string symbol
		{ 
			get { return __symbol; }
			set { __symbol = value; RaisePropertyChanged("symbol"); }
		}

		[XmlAttribute(AttributeName="section",DataType="integer")]
		public string __section;
		
		[XmlIgnore]
		public string section
		{ 
			get { return __section; }
			set { __section = value; RaisePropertyChanged("section"); }
		}

		[XmlAttribute(AttributeName="altRouteStart",DataType="integer")]
		public string __altRouteStart;
		
		[XmlIgnore]
		public string altRouteStart
		{ 
			get { return __altRouteStart; }
			set { __altRouteStart = value; RaisePropertyChanged("altRouteStart"); }
		}

		[XmlAttribute(AttributeName="altRouteEnd",DataType="integer")]
		public string __altRouteEnd;
		
		[XmlIgnore]
		public string altRouteEnd
		{ 
			get { return __altRouteEnd; }
			set { __altRouteEnd = value; RaisePropertyChanged("altRouteEnd"); }
		}

		[XmlAttribute(AttributeName="dep",DataType="string")]
		public string __dep;
		
		[XmlIgnore]
		public string dep
		{ 
			get { return __dep; }
			set { __dep = value; RaisePropertyChanged("dep"); }
		}

		[XmlAttribute(AttributeName="arr",DataType="string")]
		public string __arr;
		
		[XmlIgnore]
		public string arr
		{ 
			get { return __arr; }
			set { __arr = value; RaisePropertyChanged("arr"); }
		}

		[XmlAttribute(AttributeName="channel",DataType="int")]
		public int __channel;
		
		[XmlIgnore]
		public bool __channelSpecified;
		
		[XmlIgnore]
		public int channel
		{ 
			get { return __channel; }
			set { __channel = value; __channelSpecified = true; RaisePropertyChanged("channel"); }
		}

		[XmlAttribute(AttributeName="locType",DataType="int")]
		public int __locType;
		
		[XmlIgnore]
		public bool __locTypeSpecified;
		
		[XmlIgnore]
		public int locType
		{ 
			get { return __locType; }
			set { __locType = value; __locTypeSpecified = true; RaisePropertyChanged("locType"); }
		}

		public I()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ECOParameters",IsNullable=false),DataContract]
	public class ECOParameters : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.ECODefaultParaChanges),ElementName="ECODefaultParaChanges",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ECODefaultParaChanges __ECODefaultParaChanges;
		
		[XmlIgnore]
		public Hafas.ECODefaultParaChanges ECODefaultParaChanges
		{
			get { if (__ECODefaultParaChanges == null) __ECODefaultParaChanges = new Hafas.ECODefaultParaChanges(); return __ECODefaultParaChanges; }
			set { __ECODefaultParaChanges = value; }
		}

		[XmlElement(Type=typeof(ECODistanceList),ElementName="ECODistanceList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public ECODistanceList __ECODistanceList;
		
		[XmlIgnore]
		public ECODistanceList ECODistanceList
		{
			get { if (__ECODistanceList == null) __ECODistanceList = new ECODistanceList(); return __ECODistanceList; }
			set { __ECODistanceList = value; }
		}

		public ECOParameters()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="ECODistanceList"),DataContract]
	public class ECODistanceList : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return ECODistance.GetEnumerator();
		}

		public void Add(Hafas.ECODistance obj)
		{
			ECODistance.Add(obj);
		}

		[XmlIgnore]
		public Hafas.ECODistance this[int index]
		{
			get { return (Hafas.ECODistance) ECODistance[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return ECODistance.Count; }
        }

        public void Clear()
		{
			ECODistance.Clear();
        }

		public Hafas.ECODistance Remove(int index) 
		{ 
            Hafas.ECODistance obj = ECODistance[index];
            ECODistance.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.ECODistance obj)
		{
            return ECODistance.Remove(obj);
        }

		[XmlElement(Type=typeof(Hafas.ECODistance),ElementName="ECODistance",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.ECODistance> __ECODistance;
		
		[XmlIgnore]
		public List<Hafas.ECODistance> ECODistance
		{
			get { if (__ECODistance == null) __ECODistance = new List<Hafas.ECODistance>(); return __ECODistance; }
			set { __ECODistance = value; }
		}

		public ECODistanceList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ECODistance",IsNullable=false),DataContract]
	public class ECODistance : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="productclass",DataType="int")]
		public int __productclass;
		
		[XmlIgnore]
		public bool __productclassSpecified;
		
		[XmlIgnore]
		public int productclass
		{ 
			get { return __productclass; }
			set { __productclass = value; __productclassSpecified = true; RaisePropertyChanged("productclass"); }
		}

		[XmlAttribute(AttributeName="distance",DataType="int")]
		public int __distance;
		
		[XmlIgnore]
		public bool __distanceSpecified;
		
		[XmlIgnore]
		public int distance
		{ 
			get { return __distance; }
			set { __distance = value; __distanceSpecified = true; RaisePropertyChanged("distance"); }
		}

		public ECODistance()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ECODefaultParaChanges",IsNullable=false),DataContract]
	public class ECODefaultParaChanges : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="PTUtilization",DataType="int")]
		public int __PTUtilization;
		
		[XmlIgnore]
		public bool __PTUtilizationSpecified;
		
		[XmlIgnore]
		public int PTUtilization
		{ 
			get { return __PTUtilization; }
			set { __PTUtilization = value; __PTUtilizationSpecified = true; RaisePropertyChanged("PTUtilization"); }
		}

		[XmlAttribute(AttributeName="IVPersons",DataType="int")]
		public int __IVPersons;
		
		[XmlIgnore]
		public bool __IVPersonsSpecified;
		
		[XmlIgnore]
		public int IVPersons
		{ 
			get { return __IVPersons; }
			set { __IVPersons = value; __IVPersonsSpecified = true; RaisePropertyChanged("IVPersons"); }
		}

		[XmlAttribute(AttributeName="IVCarclass",DataType="int")]
		public int __IVCarclass;
		
		[XmlIgnore]
		public bool __IVCarclassSpecified;
		
		[XmlIgnore]
		public int IVCarclass
		{ 
			get { return __IVCarclass; }
			set { __IVCarclass = value; __IVCarclassSpecified = true; RaisePropertyChanged("IVCarclass"); }
		}

		[XmlAttribute(AttributeName="IVEngineclass",DataType="int")]
		public int __IVEngineclass;
		
		[XmlIgnore]
		public bool __IVEngineclassSpecified;
		
		[XmlIgnore]
		public int IVEngineclass
		{ 
			get { return __IVEngineclass; }
			set { __IVEngineclass = value; __IVEngineclassSpecified = true; RaisePropertyChanged("IVEngineclass"); }
		}

		[XmlAttribute(AttributeName="Flight",DataType="boolean")]
		public bool __Flight;
		
		[XmlIgnore]
		public bool __FlightSpecified;
		
		[XmlIgnore]
		public bool Flight
		{ 
			get { return __Flight; }
			set { __Flight = value; __FlightSpecified = true; RaisePropertyChanged("Flight"); }
		}

		[XmlAttribute(AttributeName="FlightFeeder",DataType="int")]
		public int __FlightFeeder;
		
		[XmlIgnore]
		public bool __FlightFeederSpecified;
		
		[XmlIgnore]
		public int FlightFeeder
		{ 
			get { return __FlightFeeder; }
			set { __FlightFeeder = value; __FlightFeederSpecified = true; RaisePropertyChanged("FlightFeeder"); }
		}

		public ECODefaultParaChanges()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ECOResEnvironmentalImpact",IsNullable=false),DataContract]
	public class ECOResEnvironmentalImpact : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="CO2",DataType="float")]
		public float __CO2;
		
		[XmlIgnore]
		public bool __CO2Specified;
		
		[XmlIgnore]
		public float CO2
		{ 
			get { return __CO2; }
			set { __CO2 = value; __CO2Specified = true; RaisePropertyChanged("CO2"); }
		}

		[XmlAttribute(AttributeName="NOX",DataType="float")]
		public float __NOX;
		
		[XmlIgnore]
		public bool __NOXSpecified;
		
		[XmlIgnore]
		public float NOX
		{ 
			get { return __NOX; }
			set { __NOX = value; __NOXSpecified = true; RaisePropertyChanged("NOX"); }
		}

		[XmlAttribute(AttributeName="SO2",DataType="float")]
		public float __SO2;
		
		[XmlIgnore]
		public bool __SO2Specified;
		
		[XmlIgnore]
		public float SO2
		{ 
			get { return __SO2; }
			set { __SO2 = value; __SO2Specified = true; RaisePropertyChanged("SO2"); }
		}

		[XmlAttribute(AttributeName="NMHC",DataType="float")]
		public float __NMHC;
		
		[XmlIgnore]
		public bool __NMHCSpecified;
		
		[XmlIgnore]
		public float NMHC
		{ 
			get { return __NMHC; }
			set { __NMHC = value; __NMHCSpecified = true; RaisePropertyChanged("NMHC"); }
		}

		[XmlAttribute(AttributeName="UBP06",DataType="float")]
		public float __UBP06;
		
		[XmlIgnore]
		public bool __UBP06Specified;
		
		[XmlIgnore]
		public float UBP06
		{ 
			get { return __UBP06; }
			set { __UBP06 = value; __UBP06Specified = true; RaisePropertyChanged("UBP06"); }
		}

		[XmlElement(Type=typeof(Hafas.ECOCarrierDescription),ElementName="ECOCarrierDescription",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ECOCarrierDescription __ECOCarrierDescription;
		
		[XmlIgnore]
		public Hafas.ECOCarrierDescription ECOCarrierDescription
		{
			get { if (__ECOCarrierDescription == null) __ECOCarrierDescription = new Hafas.ECOCarrierDescription(); return __ECOCarrierDescription; }
			set { __ECOCarrierDescription = value; }
		}

		[XmlElement(Type=typeof(Hafas.ECOConsumption),ElementName="ECOConsumption",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.ECOConsumption> __ECOConsumption;
		
		[XmlIgnore]
		public List<Hafas.ECOConsumption> ECOConsumption
		{
			get { if (__ECOConsumption == null) __ECOConsumption = new List<Hafas.ECOConsumption>(); return __ECOConsumption; }
			set { __ECOConsumption = value; }
		}

		[XmlElement(Type=typeof(Hafas.ECODust),ElementName="ECODust",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.ECODust> __ECODust;
		
		[XmlIgnore]
		public List<Hafas.ECODust> ECODust
		{
			get { if (__ECODust == null) __ECODust = new List<Hafas.ECODust>(); return __ECODust; }
			set { __ECODust = value; }
		}

		[XmlElement(Type=typeof(Hafas.ECOCO2),ElementName="ECOCO2",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.ECOCO2> __ECOCO2;
		
		[XmlIgnore]
		public List<Hafas.ECOCO2> ECOCO2
		{
			get { if (__ECOCO2 == null) __ECOCO2 = new List<Hafas.ECOCO2>(); return __ECOCO2; }
			set { __ECOCO2 = value; }
		}

		public ECOResEnvironmentalImpact()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ECOConsumption",IsNullable=false),DataContract]
	public class ECOConsumption : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="type")]
		public string __type;
		
		[XmlIgnore]
		public string type
		{ 
			get { return __type; }
			set { __type = value; RaisePropertyChanged("type"); }
		}

		[XmlAttribute(AttributeName="value")]
		public string __value;
		
		[XmlIgnore]
		public string @value
		{ 
			get { return __value; }
			set { __value = value; RaisePropertyChanged("@value"); }
		}

		public ECOConsumption()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ECOCarrierDescription",IsNullable=false),DataContract]
	public class ECOCarrierDescription : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="type",DataType="string")]
		public string __type;
		
		[XmlIgnore]
		public string type
		{ 
			get { return __type; }
			set { __type = value; RaisePropertyChanged("type"); }
		}

		[XmlAttribute(AttributeName="distance",DataType="integer")]
		public string __distance;
		
		[XmlIgnore]
		public string distance
		{ 
			get { return __distance; }
			set { __distance = value; RaisePropertyChanged("distance"); }
		}

		[XmlAttribute(AttributeName="description",DataType="string")]
		public string __description;
		
		[XmlIgnore]
		public string description
		{ 
			get { return __description; }
			set { __description = value; RaisePropertyChanged("description"); }
		}

		public ECOCarrierDescription()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ECODust",IsNullable=false),DataContract]
	public class ECODust : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="type",DataType="int")]
		public int __type;
		
		[XmlIgnore]
		public bool __typeSpecified;
		
		[XmlIgnore]
		public int type
		{ 
			get { return __type; }
			set { __type = value; __typeSpecified = true; RaisePropertyChanged("type"); }
		}

		[XmlAttribute(AttributeName="value",DataType="float")]
		public float __value;
		
		[XmlIgnore]
		public bool __valueSpecified;
		
		[XmlIgnore]
		public float @value
		{ 
			get { return __value; }
			set { __value = value; __valueSpecified = true; RaisePropertyChanged("@value"); }
		}

		public ECODust()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ECOCO2",IsNullable=false),DataContract]
	public class ECOCO2 : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="type",DataType="float")]
		public float __type;
		
		[XmlIgnore]
		public bool __typeSpecified;
		
		[XmlIgnore]
		public float type
		{ 
			get { return __type; }
			set { __type = value; __typeSpecified = true; RaisePropertyChanged("type"); }
		}

		[XmlAttribute(AttributeName="value",DataType="float")]
		public float __value;
		
		[XmlIgnore]
		public bool __valueSpecified;
		
		[XmlIgnore]
		public float @value
		{ 
			get { return __value; }
			set { __value = value; __valueSpecified = true; RaisePropertyChanged("@value"); }
		}

		public ECOCO2()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="AnnoList",IsNullable=false),DataContract]
	public class AnnoList : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return Anno.GetEnumerator();
		}

		public void Add(Anno obj)
		{
			Anno.Add(obj);
		}

		[XmlIgnore]
		public Anno this[int index]
		{
			get { return (Anno) Anno[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return Anno.Count; }
        }

        public void Clear()
		{
			Anno.Clear();
        }

		public Anno Remove(int index) 
		{ 
            Anno obj = Anno[index];
            Anno.Remove(obj);
			return obj;
        }

        public bool Remove(Anno obj)
		{
            return Anno.Remove(obj);
        }

		[XmlElement(Type=typeof(Anno),ElementName="Anno",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Anno> __Anno;
		
		[XmlIgnore]
		public List<Anno> Anno
		{
			get { if (__Anno == null) __Anno = new List<Anno>(); return __Anno; }
			set { __Anno = value; }
		}

		public AnnoList()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlType(TypeName="Anno"),DataContract]
	public class Anno : INotifyPropertyChanged
	{

		[XmlElement(ElementName="AnnoText",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __AnnoText;
		
		[XmlIgnore]
		public string AnnoText
		{ 
			get { return __AnnoText; }
			set { __AnnoText = value; RaisePropertyChanged("AnnoText"); }
		}

		[XmlElement(ElementName="CodeId",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __CodeId;
		
		[XmlIgnore]
		public string CodeId
		{ 
			get { return __CodeId; }
			set { __CodeId = value; RaisePropertyChanged("CodeId"); }
		}

		[XmlElement(ElementName="ReasonId",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __ReasonId;
		
		[XmlIgnore]
		public string ReasonId
		{ 
			get { return __ReasonId; }
			set { __ReasonId = value; RaisePropertyChanged("ReasonId"); }
		}

		[XmlElement(ElementName="CategoryId",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __CategoryId;
		
		[XmlIgnore]
		public string CategoryId
		{ 
			get { return __CategoryId; }
			set { __CategoryId = value; RaisePropertyChanged("CategoryId"); }
		}

		[XmlElement(ElementName="TypeId",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __TypeId;
		
		[XmlIgnore]
		public string TypeId
		{ 
			get { return __TypeId; }
			set { __TypeId = value; RaisePropertyChanged("TypeId"); }
		}

		[XmlElement(ElementName="FromBhf",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __FromBhf;
		
		[XmlIgnore]
		public string FromBhf
		{ 
			get { return __FromBhf; }
			set { __FromBhf = value; RaisePropertyChanged("FromBhf"); }
		}

		[XmlElement(ElementName="ToBhf",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __ToBhf;
		
		[XmlIgnore]
		public string ToBhf
		{ 
			get { return __ToBhf; }
			set { __ToBhf = value; RaisePropertyChanged("ToBhf"); }
		}

		public Anno()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="JProg",IsNullable=false),DataContract]
	public class JProg : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.AnnoList),ElementName="AnnoList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.AnnoList __AnnoList;
		
		[XmlIgnore]
		public Hafas.AnnoList AnnoList
		{
			get { if (__AnnoList == null) __AnnoList = new Hafas.AnnoList(); return __AnnoList; }
			set { __AnnoList = value; }
		}

		[XmlElement(ElementName="JStatus",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __JStatus;
		
		[XmlIgnore]
		public string JStatus
		{ 
			get { return __JStatus; }
			set { __JStatus = value; RaisePropertyChanged("JStatus"); }
		}

		public JProg()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="JHandle",IsNullable=false),DataContract]
	public class JHandle : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="tNr")]
		public string __tNr;
		
		[XmlIgnore]
		public string tNr
		{ 
			get { return __tNr; }
			set { __tNr = value; RaisePropertyChanged("tNr"); }
		}

		[XmlAttribute(AttributeName="puic")]
		public string __puic;
		
		[XmlIgnore]
		public string puic
		{ 
			get { return __puic; }
			set { __puic = value; RaisePropertyChanged("puic"); }
		}

		[XmlAttribute(AttributeName="cycle")]
		public string __cycle;
		
		[XmlIgnore]
		public string cycle
		{ 
			get { return __cycle; }
			set { __cycle = value; RaisePropertyChanged("cycle"); }
		}

		[XmlAttribute(AttributeName="ptimestamp",DataType="integer")]
		public string __ptimestamp;
		
		[XmlIgnore]
		public string ptimestamp
		{ 
			get { return __ptimestamp; }
			set { __ptimestamp = value; RaisePropertyChanged("ptimestamp"); }
		}

		[XmlAttribute(AttributeName="operationDate",DataType="string")]
		public string __operationDate;
		
		[XmlIgnore]
		public string operationDate
		{ 
			get { return __operationDate; }
			set { __operationDate = value; RaisePropertyChanged("operationDate"); }
		}

		public JHandle()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="JourneyReq",IsNullable=false),DataContract]
	public class JourneyReq : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="date")]
		public string __date;
		
		[XmlIgnore]
		public string date
		{ 
			get { return __date; }
			set { __date = value; RaisePropertyChanged("date"); }
		}

		[XmlAttribute(AttributeName="externalId")]
		public string __externalId;
		
		[XmlIgnore]
		public string externalId
		{ 
			get { return __externalId; }
			set { __externalId = value; RaisePropertyChanged("externalId"); }
		}

		[XmlAttribute(AttributeName="type")]
		public string __type;
		
		[XmlIgnore]
		public string type
		{ 
			get { return __type; }
			set { __type = value; RaisePropertyChanged("type"); }
		}

		[XmlAttribute(AttributeName="time")]
		public string __time;
		
		[XmlIgnore]
		public string @time
		{ 
			get { return __time; }
			set { __time = value; RaisePropertyChanged("@time"); }
		}

		[XmlElement(Type=typeof(Hafas.JHandle),ElementName="JHandle",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JHandle __JHandle;
		
		[XmlIgnore]
		public Hafas.JHandle JHandle
		{
			get { if (__JHandle == null) __JHandle = new Hafas.JHandle(); return __JHandle; }
			set { __JHandle = value; }
		}

		public JourneyReq()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="JourneyRes",IsNullable=false),DataContract]
	public class JourneyRes : INotifyPropertyChanged
	{

		[XmlElement(ElementName="Date",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		public string __Date;
		
		[XmlIgnore]
		public string Date
		{ 
			get { return __Date; }
			set { __Date = value; RaisePropertyChanged("Date"); }
		}

		[XmlElement(Type=typeof(Hafas.ServiceDays),ElementName="ServiceDays",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.ServiceDays> __ServiceDays;
		
		[XmlIgnore]
		public List<Hafas.ServiceDays> ServiceDays
		{
			get { if (__ServiceDays == null) __ServiceDays = new List<Hafas.ServiceDays>(); return __ServiceDays; }
			set { __ServiceDays = value; }
		}

		[XmlElement(Type=typeof(Hafas.Journey),ElementName="Journey",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Journey __Journey;
		
		[XmlIgnore]
		public Hafas.Journey Journey
		{
			get { if (__Journey == null) __Journey = new Hafas.Journey(); return __Journey; }
			set { __Journey = value; }
		}

		[XmlElement(Type=typeof(Hafas.IList),ElementName="IList",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.IList __IList;
		
		[XmlIgnore]
		public Hafas.IList IList
		{
			get { if (__IList == null) __IList = new Hafas.IList(); return __IList; }
			set { __IList = value; }
		}

		public JourneyRes()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="DirectTrainReq",IsNullable=false),DataContract]
	public class DirectTrainReq : INotifyPropertyChanged
	{

		[XmlElement(Type=typeof(Hafas.StartDirect),ElementName="StartDirect",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.StartDirect __StartDirect;
		
		[XmlIgnore]
		public Hafas.StartDirect StartDirect
		{
			get { if (__StartDirect == null) __StartDirect = new Hafas.StartDirect(); return __StartDirect; }
			set { __StartDirect = value; }
		}

		[XmlElement(Type=typeof(Hafas.Dest),ElementName="Dest",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Dest __Dest;
		
		[XmlIgnore]
		public Hafas.Dest Dest
		{
			get { if (__Dest == null) __Dest = new Hafas.Dest(); return __Dest; }
			set { __Dest = value; }
		}

		[XmlElement(ElementName="TrainFilter",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public string __TrainFilter;
		
		[XmlIgnore]
		public string TrainFilter
		{ 
			get { return __TrainFilter; }
			set { __TrainFilter = value; RaisePropertyChanged("TrainFilter"); }
		}

		[XmlElement(ElementName="Date",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		public string __Date;
		
		[XmlIgnore]
		public string Date
		{ 
			get { return __Date; }
			set { __Date = value; RaisePropertyChanged("Date"); }
		}

		public DirectTrainReq()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="StartDirect",IsNullable=false),DataContract]
	public class StartDirect : Hafas.RequestLocationType, INotifyPropertyChanged
	{

		public StartDirect() : base()
		{
		}
	}

	[XmlRoot(ElementName="TrainSearchReq",IsNullable=false),DataContract]
	public class TrainSearchReq : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="maxResults")]
		public string __maxResults;
		
		[XmlIgnore]
		public string maxResults
		{ 
			get { return __maxResults; }
			set { __maxResults = value; RaisePropertyChanged("maxResults"); }
		}

		[XmlAttribute(AttributeName="timeInterval",DataType="string")]
		public string __timeInterval;
		
		[XmlIgnore]
		public string timeInterval
		{ 
			get { return __timeInterval; }
			set { __timeInterval = value; RaisePropertyChanged("timeInterval"); }
		}

		[XmlAttribute(AttributeName="searchString",DataType="string")]
		public string __searchString;
		
		[XmlIgnore]
		public string searchString
		{ 
			get { return __searchString; }
			set { __searchString = value; RaisePropertyChanged("searchString"); }
		}

		[XmlAttribute(AttributeName="stationFilter",DataType="string")]
		public string __stationFilter;
		
		[XmlIgnore]
		public string stationFilter
		{ 
			get { return __stationFilter; }
			set { __stationFilter = value; RaisePropertyChanged("stationFilter"); }
		}

		[XmlAttribute(AttributeName="productClassFilter",DataType="int")]
		public int __productClassFilter;
		
		[XmlIgnore]
		public bool __productClassFilterSpecified;
		
		[XmlIgnore]
		public int productClassFilter
		{ 
			get { return __productClassFilter; }
			set { __productClassFilter = value; __productClassFilterSpecified = true; RaisePropertyChanged("productClassFilter"); }
		}

		[XmlElement(ElementName="Date",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		public string __Date;
		
		[XmlIgnore]
		public string Date
		{ 
			get { return __Date; }
			set { __Date = value; RaisePropertyChanged("Date"); }
		}

		[XmlElement(Type=typeof(Hafas.@Time),ElementName="Time",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.@Time __Time;
		
		[XmlIgnore]
		public Hafas.@Time @Time
		{
			get { if (__Time == null) __Time = new Hafas.@Time(); return __Time; }
			set { __Time = value; }
		}

		public TrainSearchReq()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="TrainSearchRes",IsNullable=false),DataContract]
	public class TrainSearchRes : INotifyPropertyChanged
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return Train.GetEnumerator();
		}

		public void Add(Hafas.Train obj)
		{
			Train.Add(obj);
		}

		[XmlIgnore]
		public Hafas.Train this[int index]
		{
			get { return (Hafas.Train) Train[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return Train.Count; }
        }

        public void Clear()
		{
			Train.Clear();
        }

		public Hafas.Train Remove(int index) 
		{ 
            Hafas.Train obj = Train[index];
            Train.Remove(obj);
			return obj;
        }

        public bool Remove(Hafas.Train obj)
		{
            return Train.Remove(obj);
        }

		[XmlAttribute(AttributeName="errorCode",DataType="integer")]
		public string __errorCode;
		
		[XmlIgnore]
		public string errorCode
		{ 
			get { return __errorCode; }
			set { __errorCode = value; RaisePropertyChanged("errorCode"); }
		}

		[XmlAttribute(AttributeName="noOfResults",DataType="integer")]
		public string __noOfResults;
		
		[XmlIgnore]
		public string noOfResults
		{ 
			get { return __noOfResults; }
			set { __noOfResults = value; RaisePropertyChanged("noOfResults"); }
		}

		[XmlElement(Type=typeof(Hafas.Train),ElementName="Train",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public List<Hafas.Train> __Train;
		
		[XmlIgnore]
		public List<Hafas.Train> Train
		{
			get { if (__Train == null) __Train = new List<Hafas.Train>(); return __Train; }
			set { __Train = value; }
		}

		public TrainSearchRes()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="Train",IsNullable=false),DataContract]
	public class Train : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="externalID",DataType="integer")]
		public string __externalID;
		
		[XmlIgnore]
		public string externalID
		{ 
			get { return __externalID; }
			set { __externalID = value; RaisePropertyChanged("externalID"); }
		}

		[XmlAttribute(AttributeName="trainName",DataType="string")]
		public string __trainName;
		
		[XmlIgnore]
		public string trainName
		{ 
			get { return __trainName; }
			set { __trainName = value; RaisePropertyChanged("trainName"); }
		}

		[XmlAttribute(AttributeName="lineName",DataType="string")]
		public string __lineName;
		
		[XmlIgnore]
		public string lineName
		{ 
			get { return __lineName; }
			set { __lineName = value; RaisePropertyChanged("lineName"); }
		}

		[XmlAttribute(AttributeName="operator",DataType="string")]
		public string __operator;
		
		[XmlIgnore]
		public string @operator
		{ 
			get { return __operator; }
			set { __operator = value; RaisePropertyChanged("@operator"); }
		}

		[XmlAttribute(AttributeName="administration",DataType="string")]
		public string __administration;
		
		[XmlIgnore]
		public string administration
		{ 
			get { return __administration; }
			set { __administration = value; RaisePropertyChanged("administration"); }
		}

		[XmlAttribute(AttributeName="category",DataType="integer")]
		public string __category;
		
		[XmlIgnore]
		public string category
		{ 
			get { return __category; }
			set { __category = value; RaisePropertyChanged("category"); }
		}

		[XmlAttribute(AttributeName="categoryName",DataType="string")]
		public string __categoryName;
		
		[XmlIgnore]
		public string categoryName
		{ 
			get { return __categoryName; }
			set { __categoryName = value; RaisePropertyChanged("categoryName"); }
		}

		[XmlAttribute(AttributeName="trainsPerRoute",DataType="integer")]
		public string __trainsPerRoute;
		
		[XmlIgnore]
		public string trainsPerRoute
		{ 
			get { return __trainsPerRoute; }
			set { __trainsPerRoute = value; RaisePropertyChanged("trainsPerRoute"); }
		}

		[XmlAttribute(AttributeName="averageTrainsPerDay",DataType="integer")]
		public string __averageTrainsPerDay;
		
		[XmlIgnore]
		public string averageTrainsPerDay
		{ 
			get { return __averageTrainsPerDay; }
			set { __averageTrainsPerDay = value; RaisePropertyChanged("averageTrainsPerDay"); }
		}

		[XmlAttribute(AttributeName="tripID",DataType="integer")]
		public string __tripID;
		
		[XmlIgnore]
		public string tripID
		{ 
			get { return __tripID; }
			set { __tripID = value; RaisePropertyChanged("tripID"); }
		}

		[XmlAttribute(AttributeName="resultFlags",DataType="integer")]
		public string __resultFlags;
		
		[XmlIgnore]
		public string resultFlags
		{ 
			get { return __resultFlags; }
			set { __resultFlags = value; RaisePropertyChanged("resultFlags"); }
		}

		[XmlAttribute(AttributeName="delay",DataType="integer")]
		public string __delay;
		
		[XmlIgnore]
		public string delay
		{ 
			get { return __delay; }
			set { __delay = value; RaisePropertyChanged("delay"); }
		}

		[XmlElement(Type=typeof(Hafas.JHandle),ElementName="JHandle",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.JHandle __JHandle;
		
		[XmlIgnore]
		public Hafas.JHandle JHandle
		{
			get { if (__JHandle == null) __JHandle = new Hafas.JHandle(); return __JHandle; }
			set { __JHandle = value; }
		}

		[XmlElement(Type=typeof(Hafas.Point),ElementName="Point",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.Point __Point;
		
		[XmlIgnore]
		public Hafas.Point Point
		{
			get { if (__Point == null) __Point = new Hafas.Point(); return __Point; }
			set { __Point = value; }
		}

		[XmlElement(Type=typeof(Hafas.StopType),ElementName="FirstStop",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.StopType __FirstStop;
		
		[XmlIgnore]
		public Hafas.StopType FirstStop
		{
			get { if (__FirstStop == null) __FirstStop = new Hafas.StopType(); return __FirstStop; }
			set { __FirstStop = value; }
		}

		[XmlElement(Type=typeof(Hafas.StopType),ElementName="LastStop",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.StopType __LastStop;
		
		[XmlIgnore]
		public Hafas.StopType LastStop
		{
			get { if (__LastStop == null) __LastStop = new Hafas.StopType(); return __LastStop; }
			set { __LastStop = value; }
		}

		[XmlElement(Type=typeof(Hafas.ServiceDays),ElementName="ServiceDays",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		public Hafas.ServiceDays __ServiceDays;
		
		[XmlIgnore]
		public Hafas.ServiceDays ServiceDays
		{
			get { if (__ServiceDays == null) __ServiceDays = new Hafas.ServiceDays(); return __ServiceDays; }
			set { __ServiceDays = value; }
		}

		public Train()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}

	[XmlRoot(ElementName="ConReconstructionReq",IsNullable=false),DataContract]
	public class ConReconstructionReq : INotifyPropertyChanged
	{

		[XmlAttribute(AttributeName="ctxRecon",DataType="string")]
		public string __ctxRecon;
		
		[XmlIgnore]
		public string ctxRecon
		{ 
			get { return __ctxRecon; }
			set { __ctxRecon = value; RaisePropertyChanged("ctxRecon"); }
		}

		[XmlAttribute(AttributeName="baseDate")]
		public string __baseDate;
		
		[XmlIgnore]
		public string baseDate
		{ 
			get { return __baseDate; }
			set { __baseDate = value; RaisePropertyChanged("baseDate"); }
		}

		public ConReconstructionReq()
		{
		}

		
        public event PropertyChangedEventHandler PropertyChanged;
        private void RaisePropertyChanged(string propertyName)
        {
            if (PropertyChanged != null) PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
	}
}

#pragma warning restore
